{
    "_G": {
        "body": "_G(${0:...})",
        "description": "_G",
        "prefix": "_G"
    },
    "_VERSION": {
        "body": "_VERSION(${0:...})",
        "description": "_VERSION",
        "prefix": "_VERSION"
    },
    "assert": {
        "body": "assert(${1:v}${2:[, message]})",
        "description": "assert()",
        "prefix": "assert"
    },
    "collectgarbage": {
        "body": "collectgarbage(${1:[opt]}${2:[, arg]})",
        "description": "collectgarbage()",
        "prefix": "collectgarbage"
    },
    "coroutine.create": {
        "body": "coroutine.create( ${1:function} )",
        "description": "coroutine.create",
        "prefix": "coroutine.create"
    },
    "coroutine.isyieldable": {
        "body": "coroutine.isyieldable( )",
        "description": "coroutine.isyieldable",
        "prefix": "coroutine.isyieldable"
    },
    "coroutine.resume": {
        "body": "coroutine.resume( ${1:co}${2:[, val1, \u00b7\u00b7\u00b7]} )",
        "description": "coroutine.resume",
        "prefix": "coroutine.resume"
    },
    "coroutine.running": {
        "body": "coroutine.running( )",
        "description": "coroutine.running",
        "prefix": "coroutine.running"
    },
    "coroutine.status": {
        "body": "coroutine.status( ${1:co} )",
        "description": "coroutine.status",
        "prefix": "coroutine.status"
    },
    "coroutine.wrap": {
        "body": "coroutine.wrap( ${1:function} )",
        "description": "coroutine.wrap",
        "prefix": "coroutine.wrap"
    },
    "coroutine.yield": {
        "body": "coroutine.yield( ${1:...} )",
        "description": "coroutine.yield",
        "prefix": "coroutine.yield"
    },
    "debug.debug": {
        "body": "debug.debug()",
        "description": "debug.debug ()",
        "prefix": "debug.debug"
    },
    "debug.getfenv": {
        "body": "debug.getfenv(${0:...})",
        "description": "debug.getfenv (o)",
        "prefix": "debug.getfenv"
    },
    "debug.gethook": {
        "body": "debug.gethook( ${1:[thread]} )",
        "description": "debug.gethook ([thread])",
        "prefix": "debug.gethook"
    },
    "debug.getinfo": {
        "body": "debug.getinfo( ${1:[thread],}${2:f}${3:[, what]} )",
        "description": "debug.getinfo ([thread,] f [, what])",
        "prefix": "debug.getinfo"
    },
    "debug.getlocal": {
        "body": "debug.getlocal( ${1:[thread],}${2:f}${3:[, local]} )",
        "description": "debug.getlocal ([thread,] f, local)",
        "prefix": "debug.getlocal"
    },
    "debug.getmetatable": {
        "body": "debug.getmetatable( ${1:value} )",
        "description": "debug.getmetatable (value)",
        "prefix": "debug.getmetatable"
    },
    "debug.getregistry": {
        "body": "debug.getregistry()",
        "description": "debug.getregistry ()",
        "prefix": "debug.getregistry"
    },
    "debug.getupvalue": {
        "body": "debug.getupvalue( ${1:f}, ${2:up} )",
        "description": "debug.getupvalue (f, up)",
        "prefix": "debug.getupvalue"
    },
    "debug.getuservalue": {
        "body": "debug.getuservalue(${0:...})",
        "description": "debug.getuservalue (u)",
        "prefix": "debug.getuservalue"
    },
    "debug.getuservalue ": {
        "body": "debug.getuservalue ( ${1:u} )",
        "description": "debug.getuservalue (u)",
        "prefix": "debug.getuservalue "
    },
    "debug.setfenv": {
        "body": "debug.setfenv(${0:...})",
        "description": "debug.setfenv (object, table)",
        "prefix": "debug.setfenv"
    },
    "debug.sethook": {
        "body": "debug.sethook( ${1:[thead,]}${2:hook}, ${3:mask}${4:[, count]} )",
        "description": "debug.sethook ([thread,] hook, mask [, count])",
        "prefix": "debug.sethook"
    },
    "debug.setlocal": {
        "body": "debug.setlocal( ${1:[thead,]}${2:level}, ${3:local}, ${4:value} )",
        "description": "debug.setlocal ([thread,] level, local, value)",
        "prefix": "debug.setlocal"
    },
    "debug.setmetatable": {
        "body": "debug.setmetatable( ${1:value}, ${2:table} )",
        "description": "debug.setmetatable (value, table)",
        "prefix": "debug.setmetatable"
    },
    "debug.setupvalue": {
        "body": "debug.setupvalue( ${1:f}, ${2:up}, ${3:value} )",
        "description": "debug.setupvalue (f, up, value)",
        "prefix": "debug.setupvalue"
    },
    "debug.setuservalue": {
        "body": "debug.setuservalue( ${1:udata}, ${2:value} )",
        "description": "debug.setuservalue (udata, value)",
        "prefix": "debug.setuservalue"
    },
    "debug.traceback": {
        "body": "debug.traceback( ${1:[thread,]}${2:[message]}${3:[, level]} )",
        "description": "debug.traceback ([thread,] [message [, level]])",
        "prefix": "debug.traceback"
    },
    "debug.upvalueid": {
        "body": "debug.upvalueid( ${1:f}, ${2:n})",
        "description": "debug.upvalueid (f, n)",
        "prefix": "debug.upvalueid"
    },
    "debug.upvaluejoin": {
        "body": "debug.upvaluejoin( ${1:f1}, ${2:n1}, ${3:f2}, ${4:n2} )",
        "description": "debug.upvaluejoin (f1, n1, f2, n2)",
        "prefix": "debug.upvaluejoin"
    },
    "dofile": {
        "body": "dofile(${1:[filename]})",
        "description": "dofile ([filename])",
        "prefix": "dofile"
    },
    "elif": {
        "body": "else if ${1:condition} then\n\t${0:-- body}\n",
        "description": "elif",
        "prefix": "elif"
    },
    "error": {
        "body": "error(${0:...})",
        "description": "error (message [, level])",
        "prefix": "error"
    },
    "file:close": {
        "body": "file:close(${0:...})",
        "description": "file:close ()",
        "prefix": "file:close"
    },
    "file:flush": {
        "body": "file:flush(${0:...})",
        "description": "file:flush ()",
        "prefix": "file:flush"
    },
    "file:lines": {
        "body": "file:lines(${0:...})",
        "description": "file:lines ()",
        "prefix": "file:lines"
    },
    "file:read": {
        "body": "file:read(${0:...})",
        "description": "file:read (...)",
        "prefix": "file:read"
    },
    "file:seek": {
        "body": "file:seek(${0:...})",
        "description": "file:seek ([whence] [, offset])",
        "prefix": "file:seek"
    },
    "file:setvbuf": {
        "body": "file:setvbuf(${0:...})",
        "description": "file:setvbuf (mode [, size])",
        "prefix": "file:setvbuf"
    },
    "file:write": {
        "body": "file:write(${0:...})",
        "description": "file:write (...)",
        "prefix": "file:write"
    },
    "for": {
        "body": "for ${1:i}=${2:1},${3:10} do\n\t${0:print(i)}\nend",
        "description": "for i=1,10",
        "prefix": "for"
    },
    "fori": {
        "body": "for ${1:i},${2:v} in ipairs(${3:table_name}) do\n\t${0:print(i,v)}\nend",
        "description": "for i,v in ipairs()",
        "prefix": "fori"
    },
    "forp": {
        "body": "for ${1:k},${2:v} in pairs(${3:table_name}) do\n\t${0:print(k,v)}\nend",
        "description": "for k,v in pairs()",
        "prefix": "forp"
    },
    "fun": {
        "body": "function ${1:function_name}( ${2:...} )\n\t${0:-- body}\nend",
        "description": "function",
        "prefix": "fun"
    },
    "function": {
        "body": "function ${1:function_name}( ${2:...} )\n\t${0:-- body}\nend",
        "description": "function",
        "prefix": "function"
    },
    "getfenv": {
        "body": "getfenv(${0:...})",
        "description": "getfenv ([f])",
        "prefix": "getfenv"
    },
    "getmetatable": {
        "body": "getmetatable(${1:object})",
        "description": "getmetatable (object)",
        "prefix": "getmetatable"
    },
    "if": {
        "body": "if ${1:condition} then\n\t${0:-- body}\nend",
        "description": "if",
        "prefix": "if"
    },
    "ifel": {
        "body": "if ${1:condition} then\n\t${2:-- body}\nelse\n\t${0:-- body}\nend",
        "description": "ifel",
        "prefix": "ifel"
    },
    "io.close": {
        "body": "io.close(${0:...})",
        "description": "io.close ([file])",
        "prefix": "io.close"
    },
    "io.flush": {
        "body": "io.flush(${0:...})",
        "description": "io.flush ()",
        "prefix": "io.flush"
    },
    "io.input": {
        "body": "io.input(${0:...})",
        "description": "io.input ([file])",
        "prefix": "io.input"
    },
    "io.lines": {
        "body": "io.lines(${0:...})",
        "description": "io.lines ([filename])",
        "prefix": "io.lines"
    },
    "io.open": {
        "body": "io.open(${0:...})",
        "description": "io.open (filename [, mode])",
        "prefix": "io.open"
    },
    "io.output": {
        "body": "io.output(${0:...})",
        "description": "io.output ([file])",
        "prefix": "io.output"
    },
    "io.popen": {
        "body": "io.popen(${0:...})",
        "description": "io.popen (prog [, mode])",
        "prefix": "io.popen"
    },
    "io.read": {
        "body": "io.read(${0:...})",
        "description": "io.read (...)",
        "prefix": "io.read"
    },
    "io.tmpfile": {
        "body": "io.tmpfile(${0:...})",
        "description": "io.tmpfile ()",
        "prefix": "io.tmpfile"
    },
    "io.type": {
        "body": "io.type(${0:...})",
        "description": "io.type (obj)",
        "prefix": "io.type"
    },
    "io.write": {
        "body": "io.write(${0:...})",
        "description": "io.write (...)",
        "prefix": "io.write"
    },
    "ipairs": {
        "body": "ipairs(${0:...})",
        "description": "ipairs (t)",
        "prefix": "ipairs"
    },
    "load": {
        "body": "load(${0:...})",
        "description": "load (func [, chunkname])",
        "prefix": "load"
    },
    "loadfile": {
        "body": "loadfile(${0:...})",
        "description": "loadfile ([filename])",
        "prefix": "loadfile"
    },
    "loadstring": {
        "body": "loadstring(${0:...})",
        "description": "loadstring (string [, chunkname])",
        "prefix": "loadstring"
    },
    "local": {
        "body": "local ${1:x} = ${0:1}",
        "description": "local x = 1",
        "prefix": "local"
    },
    "math.abs": {
        "body": "math.abs( ${1:x} )",
        "description": "math.abs",
        "prefix": "math.abs"
    },
    "math.acos": {
        "body": "math.acos( ${1:x} )",
        "description": "math.acos",
        "prefix": "math.acos"
    },
    "math.asin": {
        "body": "math.asin( ${1:x} )",
        "description": "math.asin",
        "prefix": "math.asin"
    },
    "math.atan": {
        "body": "math.atan( ${1:y}${2:[, x]} )",
        "description": "math.atan",
        "prefix": "math.atan"
    },
    "math.atan2": {
        "body": "math.atan2(${0:...})",
        "description": "math.atan2 (y, x)",
        "prefix": "math.atan2"
    },
    "math.ceil": {
        "body": "math.ceil( ${1:x} )",
        "description": "math.ceil",
        "prefix": "math.ceil"
    },
    "math.cos": {
        "body": "math.cos( ${1:x} )",
        "description": "math.cos",
        "prefix": "math.cos"
    },
    "math.cosh": {
        "body": "math.cosh(${0:...})",
        "description": "math.cosh (x)",
        "prefix": "math.cosh"
    },
    "math.deg": {
        "body": "math.deg( ${1:x} )",
        "description": "math.deg",
        "prefix": "math.deg"
    },
    "math.exp": {
        "body": "math.exp( ${1:x} )",
        "description": "math.exp",
        "prefix": "math.exp"
    },
    "math.floor": {
        "body": "math.floor( ${1:x} )",
        "description": "math.floor",
        "prefix": "math.floor"
    },
    "math.fmod": {
        "body": "math.fmod( ${1:x},${2:y} )",
        "description": "math.fmod",
        "prefix": "math.fmod"
    },
    "math.frexp": {
        "body": "math.frexp(${0:...})",
        "description": "math.frexp (x)",
        "prefix": "math.frexp"
    },
    "math.huge": {
        "body": "math.huge(${0:...})",
        "description": "math.huge",
        "prefix": "math.huge"
    },
    "math.ldexp": {
        "body": "math.ldexp(${0:...})",
        "description": "math.ldexp (m, e)",
        "prefix": "math.ldexp"
    },
    "math.log": {
        "body": "math.log( ${1:x}${2:[, base]} )",
        "description": "math.log",
        "prefix": "math.log"
    },
    "math.log10": {
        "body": "math.log10(${0:...})",
        "description": "math.log10 (x)",
        "prefix": "math.log10"
    },
    "math.math.randomseed": {
        "body": "math.math.randomseed( ${1:x} )",
        "description": "math.math.randomseed",
        "prefix": "math.math.randomseed"
    },
    "math.max": {
        "body": "math.max( ${1:x},${2:...} )",
        "description": "math.max",
        "prefix": "math.max"
    },
    "math.maxinteger": {
        "body": "math.maxinteger(${0:...})",
        "description": "math.maxinteger",
        "prefix": "math.maxinteger"
    },
    "math.min": {
        "body": "math.min( ${1:x},${2:...} )",
        "description": "math.min",
        "prefix": "math.min"
    },
    "math.mininteger": {
        "body": "math.mininteger(${0:...})",
        "description": "math.mininteger",
        "prefix": "math.mininteger"
    },
    "math.modf": {
        "body": "math.modf( ${1:x} )",
        "description": "math.modf",
        "prefix": "math.modf"
    },
    "math.pi": {
        "body": "math.pi(${0:...})",
        "description": "math.pi",
        "prefix": "math.pi"
    },
    "math.pow": {
        "body": "math.pow(${0:...})",
        "description": "math.pow (x, y)",
        "prefix": "math.pow"
    },
    "math.rad": {
        "body": "math.rad(${0:...})",
        "description": "math.rad (x)",
        "prefix": "math.rad"
    },
    "math.random": {
        "body": "math.random( ${1:[m]}${2:[, n]} )",
        "description": "math.random",
        "prefix": "math.random"
    },
    "math.randomseed": {
        "body": "math.randomseed(${0:...})",
        "description": "math.randomseed (x)",
        "prefix": "math.randomseed"
    },
    "math.sin": {
        "body": "math.sin( ${1:x} )",
        "description": "math.sin",
        "prefix": "math.sin"
    },
    "math.sinh": {
        "body": "math.sinh(${0:...})",
        "description": "math.sinh (x)",
        "prefix": "math.sinh"
    },
    "math.sqrt": {
        "body": "math.sqrt( ${1:x} )",
        "description": "math.sqrt",
        "prefix": "math.sqrt"
    },
    "math.tan": {
        "body": "math.tan( ${1:x} )",
        "description": "math.tan",
        "prefix": "math.tan"
    },
    "math.tanh": {
        "body": "math.tanh(${0:...})",
        "description": "math.tanh (x)",
        "prefix": "math.tanh"
    },
    "math.tointeger": {
        "body": "math.tointeger( ${1:x} )",
        "description": "math.tointeger",
        "prefix": "math.tointeger"
    },
    "math.type": {
        "body": "math.type( ${1:x} )",
        "description": "math.type",
        "prefix": "math.type"
    },
    "math.ult": {
        "body": "math.ult(${0:...})",
        "description": "math.ult (m, n)",
        "prefix": "math.ult"
    },
    "module": {
        "body": "module(${0:...})",
        "description": "module (name [, ...])",
        "prefix": "module"
    },
    "next": {
        "body": "next(${1:table}${2:[, index]})",
        "description": "next (table [, index])",
        "prefix": "next"
    },
    "os.clock": {
        "body": "os.clock(${0:...})",
        "description": "os.clock ()",
        "prefix": "os.clock"
    },
    "os.date": {
        "body": "os.date(${0:...})",
        "description": "os.date ([format [, time]])",
        "prefix": "os.date"
    },
    "os.difftime": {
        "body": "os.difftime(${0:...})",
        "description": "os.difftime (t2, t1)",
        "prefix": "os.difftime"
    },
    "os.execute": {
        "body": "os.execute(${0:...})",
        "description": "os.execute ([command])",
        "prefix": "os.execute"
    },
    "os.exit": {
        "body": "os.exit(${0:...})",
        "description": "os.exit ([code])",
        "prefix": "os.exit"
    },
    "os.getenv": {
        "body": "os.getenv(${0:...})",
        "description": "os.getenv (varname)",
        "prefix": "os.getenv"
    },
    "os.remove": {
        "body": "os.remove(${0:...})",
        "description": "os.remove (filename)",
        "prefix": "os.remove"
    },
    "os.rename": {
        "body": "os.rename(${0:...})",
        "description": "os.rename (oldname, newname)",
        "prefix": "os.rename"
    },
    "os.setlocale": {
        "body": "os.setlocale(${0:...})",
        "description": "os.setlocale (locale [, category])",
        "prefix": "os.setlocale"
    },
    "os.time": {
        "body": "os.time(${0:...})",
        "description": "os.time ([table])",
        "prefix": "os.time"
    },
    "os.tmpname": {
        "body": "os.tmpname(${0:...})",
        "description": "os.tmpname ()",
        "prefix": "os.tmpname"
    },
    "package.config": {
        "body": "package.config(${0:...})",
        "description": "package.config",
        "prefix": "package.config"
    },
    "package.cpath": {
        "body": "package.cpath(${0:...})",
        "description": "package.cpath",
        "prefix": "package.cpath"
    },
    "package.loaded": {
        "body": "package.loaded(${0:...})",
        "description": "package.loaded",
        "prefix": "package.loaded"
    },
    "package.loaders": {
        "body": "package.loaders(${0:...})",
        "description": "package.loaders",
        "prefix": "package.loaders"
    },
    "package.loadlib": {
        "body": "package.loadlib(${0:...})",
        "description": "package.loadlib (libname, funcname)",
        "prefix": "package.loadlib"
    },
    "package.path": {
        "body": "package.path(${0:...})",
        "description": "package.path",
        "prefix": "package.path"
    },
    "package.preload": {
        "body": "package.preload(${0:...})",
        "description": "package.preload",
        "prefix": "package.preload"
    },
    "package.searchers": {
        "body": "package.searchers(${0:...})",
        "description": "package.searchers",
        "prefix": "package.searchers"
    },
    "package.searchpath": {
        "body": "package.searchpath(${0:...})",
        "description": "package.searchpath (name, path [, sep [, rep]])",
        "prefix": "package.searchpath"
    },
    "package.seeall": {
        "body": "package.seeall(${0:...})",
        "description": "package.seeall (module)",
        "prefix": "package.seeall"
    },
    "pairs": {
        "body": "pairs(${0:...})",
        "description": "pairs (t)",
        "prefix": "pairs"
    },
    "pcall": {
        "body": "pcall(${0:...})",
        "description": "pcall (f, arg1, ...)",
        "prefix": "pcall"
    },
    "print": {
        "body": "print(${1:...})",
        "description": "print(...)",
        "prefix": "print"
    },
    "require": {
        "body": "require\"${1:module}\"",
        "description": "require()",
        "prefix": "require"
    },
    "ret": {
        "body": "return ${1:...}",
        "description": "return ...",
        "prefix": "ret"
    },
    "select": {
        "body": "select(${1:index}, ${2:...})",
        "description": "select (index, \u00b7\u00b7\u00b7)",
        "prefix": "select"
    },
    "setfenv": {
        "body": "setfenv(${0:...})",
        "description": "setfenv (f, table)",
        "prefix": "setfenv"
    },
    "setmetatable": {
        "body": "setmetatable(${1:table}, ${2:metatable})",
        "description": "setmetatable (table, metatable)",
        "prefix": "setmetatable"
    },
    "tonumber": {
        "body": "tonumber(${1:e}${2:[, base]})",
        "description": "tonumber (e [, base])",
        "prefix": "tonumber"
    },
    "tostring": {
        "body": "tostring(${1:v})",
        "description": "tostring (v)",
        "prefix": "tostring"
    },
    "type": {
        "body": "type(${1:v})",
        "description": "type (v)",
        "prefix": "type"
    },
    "unpack": {
        "body": "unpack(${0:...})",
        "description": "unpack (list [, i [, j]])",
        "prefix": "unpack"
    },
    "xpcall": {
        "body": "xpcall(${0:...})",
        "description": "xpcall (f, err)",
        "prefix": "xpcall"
    },
    "sys.publish(...)": {
        "body": "sys.publish(${1:...})",
        "description": "\u53d1\u5e03\u5185\u90e8\u6d88\u606f\uff0c\u5b58\u50a8\u5728\u5185\u90e8\u6d88\u606f\u961f\u5217\u4e2d\r\n\u8fd4\u56de\u503c\uff1a\r\n\u65e0\r\n\u4f8b\u5b50\uff1a\r\npublish(\"NET_STATUS_IND\")\r\n",
        "prefix": "sys.publish(...)"
    },
    "sys.restart(r)": {
        "body": "sys.restart(${1:r})",
        "description": "\u8f6f\u4ef6\u91cd\u542f\r\n\u8fd4\u56de\u503c\uff1a\r\n\u65e0\r\n\u4f8b\u5b50\uff1a\r\nsys.restart('\u7a0b\u5e8f\u8d85\u65f6\u8f6f\u4ef6\u91cd\u542f')\r\n",
        "prefix": "sys.restart(r)"
    },
    "sys.run()": {
        "body": "sys.run()",
        "description": "run()\u4ece\u5e95\u5c42\u83b7\u53d6core\u6d88\u606f\u5e76\u53ca\u65f6\u5904\u7406\u76f8\u5173\u6d88\u606f\uff0c\u67e5\u8be2\u5b9a\u65f6\u5668\u5e76\u8c03\u5ea6\u5404\u6ce8\u518c\u6210\u529f\u7684\u4efb\u52a1\u7ebf\u7a0b\u8fd0\u884c\u548c\u6302\u8d77\r\n\u8fd4\u56de\u503c\uff1a\r\n\u65e0\r\n\u4f8b\u5b50\uff1a\r\nsys.run()\r\n",
        "prefix": "sys.run()"
    },
    "sys.setRollBack(flag, secs)": {
        "body": "sys.setRollBack(${1:flag},${2: secs})",
        "description": "\u8bbe\u7f6e\u201clua\u811a\u672c\u8fd0\u884c\u51fa\u9519\u65f6\uff0c\u662f\u5426\u56de\u9000\u539f\u59cb\u70e7\u5199\u7248\u672c\u201d\u7684\u529f\u80fd\u5f00\u5173\u3002\u5982\u679c\u6ca1\u6709\u8c03\u7528\u6b64\u63a5\u53e3\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u56de\u6eda\r\n\u8fd4\u56de\u503c\uff1a\r\nnil\r\n\u4f8b\u5b50\uff1a\r\nsys.setRollBack(true)\r\nsys.setRollBack(false)\r\n",
        "prefix": "sys.setRollBack(flag, secs)"
    },
    "sys.subscribe(id, callback)": {
        "body": "sys.subscribe(${1:id},${2: callback})",
        "description": "\u8ba2\u9605\u6d88\u606f\r\n\u8fd4\u56de\u503c\uff1a\r\n\u65e0\r\n\u4f8b\u5b50\uff1a\r\nsubscribe(\"NET_STATUS_IND\", callback)\r\n",
        "prefix": "sys.subscribe(id, callback)"
    },
    "sys.taskInit(fun, ...)": {
        "body": "sys.taskInit(${1:fun},${2: ...})",
        "description": "\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u7ebf\u7a0b,\u5728\u6a21\u5757\u6700\u672b\u884c\u8c03\u7528\u8be5\u51fd\u6570\u5e76\u6ce8\u518c\u6a21\u5757\u4e2d\u7684\u4efb\u52a1\u51fd\u6570\uff0cmain.lua\u5bfc\u5165\u8be5\u6a21\u5757\u5373\u53ef\r\n\u8fd4\u56de\u503c\uff1a\r\nco  \u8fd4\u56de\u8be5\u4efb\u52a1\u7684\u7ebf\u7a0b\u53f7\r\n\u4f8b\u5b50\uff1a\r\nsys.taskInit(task1,'a','b')\r\n",
        "prefix": "sys.taskInit(fun, ...)"
    },
    "sys.timerIsActive(val, ...)": {
        "body": "sys.timerIsActive(${1:val},${2: ...})",
        "description": "\u5224\u65ad\u67d0\u4e2a\u5b9a\u65f6\u5668\u662f\u5426\u5904\u4e8e\u5f00\u542f\u72b6\u6001\r\n\u8fd4\u56de\u503c\uff1a\r\nnumber \u5f00\u542f\u72b6\u6001\u8fd4\u56detrue\uff0c\u5426\u5219nil",
        "prefix": "sys.timerIsActive(val, ...)"
    },
    "sys.timerLoopStart(fnc, ms, ...)": {
        "body": "sys.timerLoopStart(${1:fnc},${2: ms},${3: ...})",
        "description": "\u5f00\u542f\u4e00\u4e2a\u5faa\u73af\u5b9a\u65f6\u5668\r\n\u8fd4\u56de\u503c\uff1a\r\nnumber \u5b9a\u65f6\u5668ID\uff0c\u5982\u679c\u5931\u8d25\uff0c\u8fd4\u56denil",
        "prefix": "sys.timerLoopStart(fnc, ms, ...)"
    },
    "sys.timerStart(fnc, ms, ...)": {
        "body": "sys.timerStart(${1:fnc},${2: ms},${3: ...})",
        "description": "\u5f00\u542f\u4e00\u4e2a\u5b9a\u65f6\u5668\r\n\u8fd4\u56de\u503c\uff1a\r\nnumber \u5b9a\u65f6\u5668ID\uff0c\u5982\u679c\u5931\u8d25\uff0c\u8fd4\u56denil",
        "prefix": "sys.timerStart(fnc, ms, ...)"
    },
    "sys.timerStop(val, ...)": {
        "body": "sys.timerStop(${1:val},${2: ...})",
        "description": "\u5173\u95ed\u5b9a\u65f6\u5668\r\n\u8fd4\u56de\u503c\uff1a\r\n\u65e0\r\n\u4f8b\u5b50\uff1a\r\ntimerStop(1)\r\n",
        "prefix": "sys.timerStop(val, ...)"
    },
    "sys.timerStopAll(fnc)": {
        "body": "sys.timerStopAll(${1:fnc})",
        "description": "\u5173\u95ed\u540c\u4e00\u56de\u8c03\u51fd\u6570\u7684\u6240\u6709\u5b9a\u65f6\u5668\r\n\u8fd4\u56de\u503c\uff1a\r\n\u65e0\r\n\u4f8b\u5b50\uff1a\r\ntimerStopAll(cbFnc)\r\n",
        "prefix": "sys.timerStopAll(fnc)"
    },
    "sys.unsubscribe(id, callback)": {
        "body": "sys.unsubscribe(${1:id},${2: callback})",
        "description": "\u53d6\u6d88\u8ba2\u9605\u6d88\u606f\r\n\u8fd4\u56de\u503c\uff1a\r\n\u65e0\r\n\u4f8b\u5b50\uff1a\r\nunsubscribe(\"NET_STATUS_IND\", callback)\r\n",
        "prefix": "sys.unsubscribe(id, callback)"
    },
    "sys.wait(ms)": {
        "body": "sys.wait(${1:ms})",
        "description": "Task\u4efb\u52a1\u5ef6\u65f6\u51fd\u6570\uff0c\u53ea\u80fd\u7528\u4e8e\u4efb\u52a1\u51fd\u6570\u4e2d\r\n\u8fd4\u56de\u503c\uff1a\r\n\u5b9a\u65f6\u7ed3\u675f\u8fd4\u56denil,\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5524\u8d77\u8fd4\u56de\u8c03\u7528\u7ebf\u7a0b\u4f20\u5165\u7684\u53c2\u6570\r\n\u4f8b\u5b50\uff1a\r\nsys.wait(30)\r\n",
        "prefix": "sys.wait(ms)"
    },
    "sys.waitUntil(id, ms)": {
        "body": "sys.waitUntil(${1:id},${2: ms})",
        "description": "Task\u4efb\u52a1\u7684\u6761\u4ef6\u7b49\u5f85\u51fd\u6570\uff08\u5305\u62ec\u4e8b\u4ef6\u6d88\u606f\u548c\u5b9a\u65f6\u5668\u6d88\u606f\u7b49\u6761\u4ef6\uff09\uff0c\u53ea\u80fd\u7528\u4e8e\u4efb\u52a1\u51fd\u6570\u4e2d\u3002\r\n\u8fd4\u56de\u503c\uff1a\r\nresult \u63a5\u6536\u5230\u6d88\u606f\u8fd4\u56detrue\uff0c\u8d85\u65f6\u8fd4\u56defalse\r\n\u4f8b\u5b50\uff1a\r\nresult, data = sys.waitUntil(\"SIM_IND\", 120000)\r\n",
        "prefix": "sys.waitUntil(id, ms)"
    },
    "sys.waitUntilExt(id, ms)": {
        "body": "sys.waitUntilExt(${1:id},${2: ms})",
        "description": "Task\u4efb\u52a1\u7684\u6761\u4ef6\u7b49\u5f85\u51fd\u6570\u6269\u5c55\uff08\u5305\u62ec\u4e8b\u4ef6\u6d88\u606f\u548c\u5b9a\u65f6\u5668\u6d88\u606f\u7b49\u6761\u4ef6\uff09\uff0c\u53ea\u80fd\u7528\u4e8e\u4efb\u52a1\u51fd\u6570\u4e2d\u3002\r\n\u8fd4\u56de\u503c\uff1a\r\nmessage \u63a5\u6536\u5230\u6d88\u606f\u8fd4\u56demessage\uff0c\u8d85\u65f6\u8fd4\u56defalse\r\n\u4f8b\u5b50\uff1a\r\nresult, data = sys.waitUntilExt(\"SIM_IND\", 120000)\r\n",
        "prefix": "sys.waitUntilExt(id, ms)"
    },
    "table.concat(t,s)": {
        "body": "table.concat(${1:t},${2: s})",
        "description": "\u8868\u8fde\u63a5\r\n\u8fd4\u56de\u503c\uff1a\r\n  \u5b57\u7b26\u4e32\r\n\u4f8b\u5b50\uff1a\r\nfruits = {\"banana\",\"orange\",\"apple\"}\r\n-- \u8fd4\u56de table \u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32\r\nprint(\"\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32 \",table.concat(fruits))\r\n--\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32     bananaorangeapple\r\n\r\n-- \u6307\u5b9a\u8fde\u63a5\u5b57\u7b26\r\nprint(\"\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32 \",table.concat(fruits,\", \"))\r\n--\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32     banana, orange, apple\r\n\r\n-- \u6307\u5b9a\u7d22\u5f15\u6765\u8fde\u63a5 table\r\nprint(\"\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32 \",table.concat(fruits,\", \", 2,3))\r\n--\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32     orange, apple\r\n",
        "prefix": "table.concat()"
    },
    "table.gsort(t, f)": {
        "body": "table.gsort(${1:t},${2: f})",
        "description": "\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u51fd\u6570,\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u90fd\u4f1a\u8fd4\u56dehash\u8868\u7684\u6392\u5e8f\u540e\u7684\u952e\u503c\u5bf9\r\n\u8fd4\u56de\u503c\uff1a\r\nfunction.\r\n\u4f8b\u5b50\uff1a\r\ntest = {a=1,f=9,d=2,c=8,b=5}\r\nfor name,line in pairsByKeys(test) do print(name,line) end\r\n",
        "prefix": "table.gsort(t, f)"
    },
    "table.insert(t,d)": {
        "body": "table.insert(${1:t},${2: d})",
        "description": "\u6dfb\u52a0table\u53c2\u6570\r\n\u8fd4\u56de\u503c\uff1a\r\n  table\r\n\u4f8b\u5b50\uff1a\r\nfruits = {\"banana\",\"orange\",\"apple\"}\r\n\r\n-- \u5728\u672b\u5c3e\u63d2\u5165\r\ntable.insert(fruits,\"mango\")\r\nprint(\"\u7d22\u5f15\u4e3a 4 \u7684\u5143\u7d20\u4e3a \",fruits[4])\r\n--\u7d22\u5f15\u4e3a 4 \u7684\u5143\u7d20\u4e3a     mango\r\n\r\n-- \u5728\u7d22\u5f15\u4e3a 2 \u7684\u952e\u5904\u63d2\u5165\r\ntable.insert(fruits,2,\"grapes\")\r\nprint(\"\u7d22\u5f15\u4e3a 2 \u7684\u5143\u7d20\u4e3a \",fruits[2])\r\n--\u7d22\u5f15\u4e3a 2 \u7684\u5143\u7d20\u4e3a     grapes\r\n\r\nprint(\"\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a \",fruits[5])\r\n--\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a     mango\r\n",
        "prefix": "table.insert()"
    },
    "table.remove(t,i)": {
        "body": "table.remove(${1:t},${2: i})",
        "description": "\u79fb\u9664table\u53c2\u6570\r\n\u8fd4\u56de\u503c\uff1a\r\n  table",
        "prefix": "table.remove()"
    },
    "string.byte()": {
        "body": "string.byte()",
        "description": "\u63a5\u6536\u63a7\u5236\u5b57\u7b26\uff0c\u8fd4\u56deASCII\u7801\r\n\u8fd4\u56de\u503c\uff1a\r\n  ASCII\u7801\r\n\u4f8b\u5b50\uff1a\r\nstring.byte(\"ABCD\")  --65\r\nstring.byte(\"ABCD\",4) --68\r\n",
        "prefix": "string.byte()"
    },
    "string.char()": {
        "body": "string.char()",
        "description": "\u63a5\u6536ASCII\u7801\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u63a7\u5236\u5b57\u7b26\r\n\u8fd4\u56de\u503c\uff1a\r\n  \u5b57\u7b26\r\n\u4f8b\u5b50\uff1a\r\nstring.char(97,98,99,100)   --abcd\r\n",
        "prefix": "string.char()"
    },
    "string.find()": {
        "body": "string.find()",
        "description": "\u67e5\u627e\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u00a0s\u00a0\u4e2d\u5339\u914d\u5230\u7684\u00a0pattern\r\n\u8fd4\u56de\u503c\uff1a\r\n  \u8fd4\u56de\u5339\u914d\u5b57\u7b26\u5177\u4f53\u4f4d\u7f6e\u3002\u4e0d\u5b58\u5728\u5219\u8fd4\u56de nil\r\n\u4f8b\u5b50\uff1a\r\nstring.find(\"Hello Lua user\", \"Lua\", 1)   --7   9\r\n",
        "prefix": "string.find()"
    },
    "string.format()": {
        "body": "string.format()",
        "description": "\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\r\n\u8fd4\u56de\u503c\uff1a\r\n  \u5b57\u7b26\u4e32\r\n\u4f8b\u5b50\uff1a\r\nstring.format(\"the value is:%d\",4)   --the value is:4\r\n",
        "prefix": "string.format()"
    },
    "string.gsub()": {
        "body": "string.gsub()",
        "description": "\u5b57\u7b26\u4e32\u66ff\u6362",
        "prefix": "string.gsub()"
    },
    "string.len()": {
        "body": "string.len()",
        "description": "\u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6\r\n\u8fd4\u56de\u503c\uff1a\r\n  \u5b57\u7b26\u4e32\u957f\u5ea6\r\n\u4f8b\u5b50\uff1a\r\nstring.len(\"abc\")  --3\r\n",
        "prefix": "string.len()"
    },
    "string.lower()": {
        "body": "string.lower()",
        "description": "\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u4e3a\u5c0f\u5199\u5b57\u6bcd\r\n\u8fd4\u56de\u503c\uff1a\r\n  \u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32",
        "prefix": "string.lower()"
    },
    "string.rep()": {
        "body": "string.rep()",
        "description": "\u5b57\u7b26\u4e32\u62f7\u8d1d\r\n\u8fd4\u56de\u503c\uff1a\r\n  \u5b57\u7b26\u4e32\r\n\u4f8b\u5b50\uff1a\r\nstring.rep(\"abcd\",2)   --abcdabcd\r\n",
        "prefix": "string.rep()"
    },
    "string.reverse()": {
        "body": "string.reverse()",
        "description": "\u5b57\u7b26\u4e32\u53cd\u8f6c\r\n\u8fd4\u56de\u503c\uff1a\r\n  \u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\r\n\u4f8b\u5b50\uff1a\r\nstring.reverse(\"Luat\")  --tauL\r\n",
        "prefix": "string.reverse()"
    },
    "string.split(str, delimiter)": {
        "body": "string.split(${1:str},${2: delimiter})",
        "description": "\u6309\u7167\u6307\u5b9a\u5206\u9694\u7b26\u5206\u5272\u5b57\u7b26\u4e32\r\n\u8fd4\u56de\u503c\uff1a\r\n\u5206\u5272\u540e\u7684\u5b57\u7b26\u4e32\u5217\u8868\r\n\u4f8b\u5b50\uff1a\r\n\"123,456,789\":split(',') -> {'123','456','789'}\r\n",
        "prefix": "string.split(str, delimiter)"
    },
    "string.upper()": {
        "body": "string.upper()",
        "description": "\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u4e3a\u5927\u5199\u5b57\u6bcd\r\n\u8fd4\u56de\u503c\uff1a\r\n  \u5927\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32",
        "prefix": "string.upper()"
    },
    "adc.open": {
        "body": "adc.open(${1:id})",
        "description": "\u6253\u5f00adc\u901a\u9053",
        "prefix": "adc.open"
    },
    "adc.read": {
        "body": "adc.read(${1:id})",
        "description": "\u8bfb\u53d6adc\u901a\u9053",
        "prefix": "adc.read"
    },
    "adc.close": {
        "body": "adc.close(${1:id})",
        "description": "\u5173\u95edadc\u901a\u9053",
        "prefix": "adc.close"
    },
    "crypto.md5": {
        "body": "crypto.md5(${1:str})",
        "description": "\u8ba1\u7b97md5\u503c",
        "prefix": "crypto.md5"
    },
    "crypto.hmac_md5": {
        "body": "crypto.hmac_md5(${1:str},${2:key})",
        "description": "\u8ba1\u7b97hmac_md5\u503c",
        "prefix": "crypto.hmac_md5"
    },
    "crypto.sha1": {
        "body": "crypto.sha1(${1:str})",
        "description": "\u8ba1\u7b97sha1\u503c",
        "prefix": "crypto.sha1"
    },
    "crypto.hmac_sha1": {
        "body": "crypto.hmac_sha1(${1:str},${2:key})",
        "description": "\u8ba1\u7b97hmac_sha1\u503c",
        "prefix": "crypto.hmac_sha1"
    },
    "crypto.sha256": {
        "body": "crypto.sha256(${1:str})",
        "description": "\u8ba1\u7b97sha256\u503c",
        "prefix": "crypto.sha256"
    },
    "crypto.hmac_sha256": {
        "body": "crypto.hmac_sha256(${1:str},${2:key})",
        "description": "\u8ba1\u7b97hmac_sha256\u503c",
        "prefix": "crypto.hmac_sha256"
    },
    "crypto.sha512": {
        "body": "crypto.sha512(${1:str})",
        "description": "\u8ba1\u7b97sha512\u503c",
        "prefix": "crypto.sha512"
    },
    "crypto.hmac_sha512": {
        "body": "crypto.hmac_sha512(${1:str},${2:key})",
        "description": "\u8ba1\u7b97hmac_sha512\u503c",
        "prefix": "crypto.hmac_sha512"
    },
    "crypto.cipher_encrypt": {
        "body": "crypto.cipher_encrypt(${1:type},${2:padding},${3:str},${4:key},${5:iv})",
        "description": "\u5bf9\u79f0\u52a0\u5bc6",
        "prefix": "crypto.cipher_encrypt"
    },
    "crypto.cipher_decrypt": {
        "body": "crypto.cipher_decrypt(${1:type},${2:padding},${3:str},${4:key},${5:iv})",
        "description": "\u5bf9\u79f0\u89e3\u5bc6",
        "prefix": "crypto.cipher_decrypt"
    },
    "crypto.crc16": {
        "body": "crypto.crc16(${1:method},${2:data},${3:poly},${4:initial},${5:finally},${6:inReversemoutReverse})",
        "description": "\u8ba1\u7b97CRC16",
        "prefix": "crypto.crc16"
    },
    "crypto.crc16_modbus": {
        "body": "crypto.crc16_modbus(${1:data})",
        "description": "\u76f4\u63a5\u8ba1\u7b97modbus\u7684crc16\u503c",
        "prefix": "crypto.crc16_modbus"
    },
    "crypto.crc32": {
        "body": "crypto.crc32(${1:data})",
        "description": "\u8ba1\u7b97crc32\u503c",
        "prefix": "crypto.crc32"
    },
    "crypto.crc8": {
        "body": "crypto.crc8(${1:data})",
        "description": "\u8ba1\u7b97crc8\u503c",
        "prefix": "crypto.crc8"
    },
    "crypto.trng": {
        "body": "crypto.trng(${1:len})",
        "description": "\u751f\u6210\u771f\u968f\u673a\u6570",
        "prefix": "crypto.trng"
    },
    "ctiot.init": {
        "body": "ctiot.init()",
        "description": "\u521d\u59cb\u5316ctiot\uff0c\u5728\u590d\u4f4d\u5f00\u673a\u540e\u4f7f\u7528\u4e00\u6b21",
        "prefix": "ctiot.init"
    },
    "ctiot.param": {
        "body": "ctiot.param(${1:ip},${2:port},${3:lifetime})",
        "description": "\u8bbe\u7f6e\u548c\u8bfb\u53d6ctiot\u76f8\u5173\u53c2\u6570\uff0c\u6709\u53c2\u6570\u8f93\u5165\u5219\u8bbe\u7f6e\uff0c\u65e0\u8bba\u662f\u5426\u6709\u53c2\u6570\u8f93\u5165\uff0c\u5747\u8f93\u51fa\u5f53\u524d\u53c2\u6570",
        "prefix": "ctiot.param"
    },
    "ctiot.ep": {
        "body": "ctiot.ep(${1:val})",
        "description": "\u8bbe\u7f6e\u548c\u8bfb\u53d6\u81ea\u5b9a\u4e49EP",
        "prefix": "ctiot.ep"
    },
    "ctiot.connect": {
        "body": "ctiot.connect()",
        "description": "\u8fde\u63a5CTIOT\uff0c\u5fc5\u987b\u5728\u8bbe\u7f6e\u5b8c\u53c2\u6570\u548c\u6a21\u5f0f\u540e\u518d\u4f7f\u7528",
        "prefix": "ctiot.connect"
    },
    "ctiot.disconnect": {
        "body": "ctiot.disconnect()",
        "description": "\u65ad\u5f00ctiot",
        "prefix": "ctiot.disconnect"
    },
    "ctiot.write": {
        "body": "ctiot.write(${1:data},${2:mode},${3:seq})",
        "description": "\u53d1\u9001\u6570\u636e\u7ed9ctiot",
        "prefix": "ctiot.write"
    },
    "ctiot.ready": {
        "body": "ctiot.ready()",
        "description": "\u662f\u5426\u5df2\u7ecf\u5c31\u7eea",
        "prefix": "ctiot.ready"
    },
    "disp.init": {
        "body": "disp.init(${1:conf})",
        "description": "\u663e\u793a\u5c4f\u521d\u59cb\u5316",
        "prefix": "disp.init"
    },
    "disp.close": {
        "body": "disp.close()",
        "description": "\u5173\u95ed\u663e\u793a\u5c4f",
        "prefix": "disp.close"
    },
    "disp.update": {
        "body": "disp.update()",
        "description": "\u628a\u663e\u793a\u6570\u636e\u66f4\u65b0\u5230\u5c4f\u5e55",
        "prefix": "disp.update"
    },
    "disp.drawStr": {
        "body": "disp.drawStr(${1:content},${2:x},${3:y})",
        "description": "\u5728\u663e\u793a\u5c4f\u4e0a\u753b\u4e00\u6bb5\u6587\u5b57,\u8981\u8c03\u7528disp.update\u624d\u4f1a\u66f4\u65b0\u5230\u5c4f\u5e55",
        "prefix": "disp.drawStr"
    },
    "disp.setFont": {
        "body": "disp.setFont(${1:fontId})",
        "description": "\u8bbe\u7f6e\u5b57\u4f53",
        "prefix": "disp.setFont"
    },
    "eink.setup": {
        "body": "eink.setup(${1:full},${2:spiid})",
        "description": "\u521d\u59cb\u5316eink",
        "prefix": "eink.setup"
    },
    "eink.clear": {
        "body": "eink.clear()",
        "description": "\u6e05\u9664\u7ed8\u56fe\u7f13\u51b2\u533a",
        "prefix": "eink.clear"
    },
    "eink.setWin": {
        "body": "eink.setWin(${1:width},${2:height},${3:rotate})",
        "description": "\u8bbe\u7f6e\u7a97\u53e3",
        "prefix": "eink.setWin"
    },
    "eink.getWin": {
        "body": "eink.getWin()",
        "description": "\u83b7\u53d6\u7a97\u53e3\u4fe1\u606f",
        "prefix": "eink.getWin"
    },
    "eink.print": {
        "body": "eink.print(${1:x},${2:y},${3:str},${4:colored},${5:font})",
        "description": "\u7ed8\u5236\u5b57\u7b26\u4e32",
        "prefix": "eink.print"
    },
    "eink.show": {
        "body": "eink.show(${1:x},${2:y})",
        "description": "\u5c06\u7f13\u51b2\u533a\u56fe\u50cf\u8f93\u51fa\u5230\u5c4f\u5e55",
        "prefix": "eink.show"
    },
    "eink.line": {
        "body": "eink.line(${1:x},${2:y},${3:x2},${4:y2},${5:colored})",
        "description": "\u7f13\u51b2\u533a\u7ed8\u5236\u7ebf",
        "prefix": "eink.line"
    },
    "eink.rect": {
        "body": "eink.rect(${1:x},${2:y},${3:x2},${4:y2},${5:colored},${6:fill})",
        "description": "\u7f13\u51b2\u533a\u7ed8\u5236\u77e9\u5f62",
        "prefix": "eink.rect"
    },
    "eink.circle": {
        "body": "eink.circle(${1:x},${2:y},${3:radius},${4:colored},${5:fill})",
        "description": "\u7f13\u51b2\u533a\u7ed8\u5236\u5706\u5f62",
        "prefix": "eink.circle"
    },
    "eink.qrcode": {
        "body": "eink.qrcode(${1:x},${2:y},${3:str},${4:version})",
        "description": "\u7f13\u51b2\u533a\u7ed8\u5236QRCode",
        "prefix": "eink.qrcode"
    },
    "eink.bat": {
        "body": "eink.bat(${1:x},${2:y},${3:bat})",
        "description": "\u7f13\u51b2\u533a\u7ed8\u5236\u7535\u6c60",
        "prefix": "eink.bat"
    },
    "eink.weather_icon": {
        "body": "eink.weather_icon(${1:x},${2:y},${3:code})",
        "description": "\u7f13\u51b2\u533a\u7ed8\u5236\u5929\u6c14\u56fe\u6807",
        "prefix": "eink.weather_icon"
    },
    "eink.model": {
        "body": "eink.model(${1:m})",
        "description": "\u8bbe\u7f6e\u58a8\u6c34\u5c4f\u9a71\u52a8\u578b\u53f7",
        "prefix": "eink.model"
    },
    "eink.bitmap": {
        "body": "eink.bitmap(${1:x},${2:y},${3:h},${4:data},${5:mode})",
        "description": "\u7ed8\u5236\u4f4d\u56fe",
        "prefix": "eink.bitmap"
    },
    "fdb.kvdb_init": {
        "body": "fdb.kvdb_init(${1:name},${2:partition})",
        "description": "\u521d\u59cb\u5316kv\u6570\u636e\u5e93",
        "prefix": "fdb.kvdb_init"
    },
    "fdb.kv_set": {
        "body": "fdb.kv_set(${1:key},${2:value})",
        "description": "\u8bbe\u7f6e\u4e00\u5bf9kv\u6570\u636e",
        "prefix": "fdb.kv_set"
    },
    "fdb.kv_get": {
        "body": "fdb.kv_get(${1:key})",
        "description": "\u6839\u636ekey\u83b7\u53d6\u5bf9\u5e94\u7684\u6570\u636e",
        "prefix": "fdb.kv_get"
    },
    "fdb.kv_del": {
        "body": "fdb.kv_del(${1:key})",
        "description": "\u6839\u636ekey\u5220\u9664\u6570\u636e",
        "prefix": "fdb.kv_del"
    },
    "fs.fsstat": {
        "body": "fs.fsstat(${1:path})",
        "description": "\u83b7\u53d6\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f",
        "prefix": "fs.fsstat"
    },
    "fs.fsize": {
        "body": "fs.fsize(${1:path})",
        "description": "\u83b7\u53d6\u6587\u4ef6\u5927\u5c0f",
        "prefix": "fs.fsize"
    },
    "gpio.setup": {
        "body": "gpio.setup(${1:pin},${2:mode},${3:pull},${4:irq})",
        "description": "\u8bbe\u7f6e\u7ba1\u811a\u529f\u80fd",
        "prefix": "gpio.setup"
    },
    "gpio.set": {
        "body": "gpio.set(${1:pin},${2:value})",
        "description": "\u8bbe\u7f6e\u7ba1\u811a\u7535\u5e73",
        "prefix": "gpio.set"
    },
    "gpio.get": {
        "body": "gpio.get(${1:pin})",
        "description": "\u83b7\u53d6\u7ba1\u811a\u7535\u5e73",
        "prefix": "gpio.get"
    },
    "gpio.close": {
        "body": "gpio.close(${1:pin})",
        "description": "\u5173\u95ed\u7ba1\u811a\u529f\u80fd(\u9ad8\u963b\u8f93\u5165\u6001),\u5173\u6389\u4e2d\u65ad",
        "prefix": "gpio.close"
    },
    "gpio.setDefaultPull": {
        "body": "gpio.setDefaultPull(${1:val})",
        "description": "\u8bbe\u7f6eGPIO\u811a\u7684\u9ed8\u8ba4\u4e0a\u62c9/\u4e0b\u62c9\u8bbe\u7f6e, \u9ed8\u8ba4\u662f\u5e73\u53f0\u81ea\u5b9a\u4e49(\u4e00\u822c\u4e3a\u5f00\u6f0f).",
        "prefix": "gpio.setDefaultPull"
    },
    "http.req": {
        "body": "http.req(${1:url},${2:params},${3:cb})",
        "description": "\u53d1\u8d77\u4e00\u4e2ahttp get\u8bf7\u6c42\uff08\u63a8\u8350\u7528http.get/post/put/delete\u65b9\u6cd5\uff09",
        "prefix": "http.req"
    },
    "http.get": {
        "body": "http.get(${1:url},${2:params},${3:cb})",
        "description": "\u53d1\u8d77\u4e00\u4e2ahttp get\u8bf7\u6c42",
        "prefix": "http.get"
    },
    "http.post": {
        "body": "http.post(${1:url},${2:params},${3:cb})",
        "description": "\u53d1\u8d77\u4e00\u4e2ahttp post\u8bf7\u6c42",
        "prefix": "http.post"
    },
    "http.put": {
        "body": "http.put(${1:url},${2:params},${3:cb})",
        "description": "\u53d1\u8d77\u4e00\u4e2ahttp put\u8bf7\u6c42",
        "prefix": "http.put"
    },
    "http.delete": {
        "body": "http.delete(${1:url},${2:params},${3:cb})",
        "description": "\u53d1\u8d77\u4e00\u4e2ahttp delete\u8bf7\u6c42",
        "prefix": "http.delete"
    },
    "i2c.exist": {
        "body": "i2c.exist(${1:id})",
        "description": "i2c\u7f16\u53f7\u662f\u5426\u5b58\u5728",
        "prefix": "i2c.exist"
    },
    "i2c.setup": {
        "body": "i2c.setup(${1:id},${2:speed},${3:slaveAddr})",
        "description": "i2c\u521d\u59cb\u5316",
        "prefix": "i2c.setup"
    },
    "i2c.createSoft": {
        "body": "i2c.createSoft(${1:scl},${2:sda},${3:slaveAddr})",
        "description": "\u65b0\u5efa\u4e00\u4e2a\u8f6f\u4ef6i2c\u5bf9\u8c61",
        "prefix": "i2c.createSoft"
    },
    "i2c.send": {
        "body": "i2c.send(${1:id},${2:addr},${3:data})",
        "description": "i2c\u53d1\u9001\u6570\u636e",
        "prefix": "i2c.send"
    },
    "i2c.recv": {
        "body": "i2c.recv(${1:id},${2:addr},${3:len})",
        "description": "i2c\u63a5\u6536\u6570\u636e",
        "prefix": "i2c.recv"
    },
    "i2c.writeReg": {
        "body": "i2c.writeReg(${1:id},${2:addr},${3:reg},${4:data})",
        "description": "i2c\u5199\u5bc4\u5b58\u5668\u6570\u636e",
        "prefix": "i2c.writeReg"
    },
    "i2c.readReg": {
        "body": "i2c.readReg(${1:id},${2:addr},${3:reg},${4:len})",
        "description": "i2c\u8bfb\u5bc4\u5b58\u5668\u6570\u636e",
        "prefix": "i2c.readReg"
    },
    "i2c.close": {
        "body": "i2c.close(${1:id})",
        "description": "\u5173\u95edi2c\u8bbe\u5907",
        "prefix": "i2c.close"
    },
    "i2c.readDHT12": {
        "body": "i2c.readDHT12(${1:id})",
        "description": "\u4ecei2c\u603b\u7ebf\u8bfb\u53d6DHT12\u7684\u6e29\u6e7f\u5ea6\u6570\u636e",
        "prefix": "i2c.readDHT12"
    },
    "i2c.readSHT30": {
        "body": "i2c.readSHT30(${1:id},${2:addr})",
        "description": "\u4ecei2c\u603b\u7ebf\u8bfb\u53d6DHT30\u7684\u6e29\u6e7f\u5ea6\u6570\u636e(\u7531\"\u597d\u5947\u661f\"\u8d21\u732e)",
        "prefix": "i2c.readSHT30"
    },
    "ir.sendNEC": {
        "body": "ir.sendNEC(${1:pin},${2:addr},${3:cmd},${4:repeat},${5:disablePWM})",
        "description": "\u53d1\u9001NEC\u6570\u636e",
        "prefix": "ir.sendNEC"
    },
    "json.encode": {
        "body": "json.encode(${1:obj},${2:t})",
        "description": "\u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3ajson\u5b57\u7b26\u4e32",
        "prefix": "json.encode"
    },
    "json.decode": {
        "body": "json.decode(${1:str})",
        "description": "\u5c06\u5b57\u7b26\u4e32\u53cd\u5e8f\u5217\u5316\u4e3a\u5bf9\u8c61",
        "prefix": "json.decode"
    },
    "keyboard.init": {
        "body": "keyboard.init(${1:port},${2:conf},${3:map},${4:debounce})",
        "description": "\u521d\u59cb\u5316\u952e\u76d8\u77e9\u9635",
        "prefix": "keyboard.init"
    },
    "lcd.init": {
        "body": "lcd.init(${1:tp},${2:args})",
        "description": "lcd\u663e\u793a\u5c4f\u521d\u59cb\u5316",
        "prefix": "lcd.init"
    },
    "lcd.close": {
        "body": "lcd.close()",
        "description": "\u5173\u95edlcd\u663e\u793a\u5c4f",
        "prefix": "lcd.close"
    },
    "lcd.on": {
        "body": "lcd.on()",
        "description": "\u5f00\u542flcd\u663e\u793a\u5c4f\u80cc\u5149",
        "prefix": "lcd.on"
    },
    "lcd.off": {
        "body": "lcd.off()",
        "description": "\u5173\u95edlcd\u663e\u793a\u5c4f\u80cc\u5149",
        "prefix": "lcd.off"
    },
    "lcd.sleep": {
        "body": "lcd.sleep()",
        "description": "lcd\u7761\u7720",
        "prefix": "lcd.sleep"
    },
    "lcd.wakeup": {
        "body": "lcd.wakeup()",
        "description": "lcd\u5524\u9192",
        "prefix": "lcd.wakeup"
    },
    "lcd.setColor": {
        "body": "lcd.setColor(${1:back},${2:fore})",
        "description": "lcd\u989c\u8272\u8bbe\u7f6e",
        "prefix": "lcd.setColor"
    },
    "lcd.draw": {
        "body": "lcd.draw(${1:x1},${2:y1},${3:x2},${4:y2},${5:color})",
        "description": "lcd\u989c\u8272\u586b\u5145",
        "prefix": "lcd.draw"
    },
    "lcd.clear": {
        "body": "lcd.clear(${1:color})",
        "description": "lcd\u6e05\u5c4f",
        "prefix": "lcd.clear"
    },
    "lcd.fill": {
        "body": "lcd.fill(${1:x1},${2:y1},${3:x2},${4:y2},${5:color})",
        "description": "lcd\u989c\u8272\u586b\u5145",
        "prefix": "lcd.fill"
    },
    "lcd.drawPoint": {
        "body": "lcd.drawPoint(${1:x0},${2:y0},${3:color})",
        "description": "\u753b\u4e00\u4e2a\u70b9.",
        "prefix": "lcd.drawPoint"
    },
    "lcd.drawLine": {
        "body": "lcd.drawLine(${1:x0},${2:y0},${3:x1},${4:y1},${5:color})",
        "description": "\u5728\u4e24\u70b9\u4e4b\u95f4\u753b\u4e00\u6761\u7ebf.",
        "prefix": "lcd.drawLine"
    },
    "lcd.drawRectangle": {
        "body": "lcd.drawRectangle(${1:x0},${2:y0},${3:x1},${4:y1},${5:color})",
        "description": "\u4ecex / y\u4f4d\u7f6e\uff08\u5de6\u4e0a\u8fb9\u7f18\uff09\u5f00\u59cb\u7ed8\u5236\u4e00\u4e2a\u6846",
        "prefix": "lcd.drawRectangle"
    },
    "lcd.drawCircle": {
        "body": "lcd.drawCircle(${1:x0},${2:y0},${3:r},${4:color})",
        "description": "\u4ecex / y\u4f4d\u7f6e\uff08\u5706\u5fc3\uff09\u5f00\u59cb\u7ed8\u5236\u4e00\u4e2a\u5706",
        "prefix": "lcd.drawCircle"
    },
    "lcd.setFont": {
        "body": "lcd.setFont(${1:font})",
        "description": "\u8bbe\u7f6e\u5b57\u4f53",
        "prefix": "lcd.setFont"
    },
    "lcd.drawStr": {
        "body": "lcd.drawStr(${1:x},${2:y},${3:str},${4:fg_color},${5:bg_color})",
        "description": "\u663e\u793a\u5b57\u7b26\u4e32",
        "prefix": "lcd.drawStr"
    },
    "lcd.drawGtfontGb2312": {
        "body": "lcd.drawGtfontGb2312(${1:str},${2:size},${3:x},${4:y})",
        "description": "\u4f7f\u7528gtfont\u663e\u793agb2312\u5b57\u7b26\u4e32",
        "prefix": "lcd.drawGtfontGb2312"
    },
    "lcd.drawGtfontGb2312Gray": {
        "body": "lcd.drawGtfontGb2312Gray(${1:str},${2:size},${3:gray},${4:x},${5:y})",
        "description": "\u4f7f\u7528gtfont\u7070\u5ea6\u663e\u793agb2312\u5b57\u7b26\u4e32",
        "prefix": "lcd.drawGtfontGb2312Gray"
    },
    "lcd.drawGtfontUtf8": {
        "body": "lcd.drawGtfontUtf8(${1:str},${2:size},${3:x},${4:y})",
        "description": "\u4f7f\u7528gtfont\u663e\u793aUTF8\u5b57\u7b26\u4e32",
        "prefix": "lcd.drawGtfontUtf8"
    },
    "lcd.drawGtfontUtf8Gray": {
        "body": "lcd.drawGtfontUtf8Gray(${1:str},${2:size},${3:gray},${4:x},${5:y})",
        "description": "\u4f7f\u7528gtfont\u7070\u5ea6\u663e\u793aUTF8\u5b57\u7b26\u4e32",
        "prefix": "lcd.drawGtfontUtf8Gray"
    },
    "lcd.getSize": {
        "body": "lcd.getSize()",
        "description": "\u83b7\u53d6\u5c4f\u5e55\u5c3a\u5bf8",
        "prefix": "lcd.getSize"
    },
    "lcdseg.setup": {
        "body": "lcdseg.setup(${1:bias},${2:duty},${3:vlcd},${4:com_number},${5:fresh_rate},${6:com_mark},${7:seg_mark})",
        "description": "\u521d\u59cb\u5316lcdseg\u5e93",
        "prefix": "lcdseg.setup"
    },
    "lcdseg.enable": {
        "body": "lcdseg.enable(${1:en})",
        "description": "\u542f\u7528\u6216\u7981\u7528lcdseg\u5e93",
        "prefix": "lcdseg.enable"
    },
    "lcdseg.power": {
        "body": "lcdseg.power(${1:en})",
        "description": "\u542f\u7528\u6216\u7981\u7528lcdseg\u7684\u8f93\u51fa",
        "prefix": "lcdseg.power"
    },
    "lcdseg.seg_set": {
        "body": "lcdseg.seg_set(${1:com},${2:seg},${3:en})",
        "description": "\u8bbe\u7f6e\u5177\u4f53\u4e00\u4e2a\u6bb5\u7801\u7684\u72b6\u6001",
        "prefix": "lcdseg.seg_set"
    },
    "libcoap.new": {
        "body": "libcoap.new(${1:code},${2:uri},${3:headers},${4:payload})",
        "description": "\u521b\u5efa\u4e00\u4e2acoap\u6570\u636e\u5305",
        "prefix": "libcoap.new"
    },
    "libcoap.parse": {
        "body": "libcoap.parse(${1:str})",
        "description": "\u89e3\u6790coap\u6570\u636e\u5305",
        "prefix": "libcoap.parse"
    },
    "coapdata:msgid": {
        "body": "coapdata:msgid()",
        "description": "\u83b7\u53d6coap\u6570\u636e\u5305\u7684msgid",
        "prefix": "coapdata:msgid"
    },
    "coapdata:token": {
        "body": "coapdata:token()",
        "description": "\u83b7\u53d6coap\u6570\u636e\u5305\u7684token",
        "prefix": "coapdata:token"
    },
    "coapdata:rawdata": {
        "body": "coapdata:rawdata()",
        "description": "\u83b7\u53d6coap\u6570\u636e\u5305\u7684\u4e8c\u8fdb\u5236\u6570\u636e,\u7528\u4e8e\u53d1\u9001\u5230\u670d\u52a1\u5668",
        "prefix": "coapdata:rawdata"
    },
    "coapdata:code": {
        "body": "coapdata:code()",
        "description": "\u83b7\u53d6coap\u6570\u636e\u5305\u7684code",
        "prefix": "coapdata:code"
    },
    "coapdata:hcode": {
        "body": "coapdata:hcode()",
        "description": "\u83b7\u53d6coap\u6570\u636e\u5305\u7684http code, \u6bd4coap\u539f\u59cb\u7684code\u8981\u53cb\u597d",
        "prefix": "coapdata:hcode"
    },
    "coapdata:type": {
        "body": "coapdata:type(${1:t})",
        "description": "\u83b7\u53d6coap\u6570\u636e\u5305\u7684type, \u4f8b\u5982libcoap.CON/NON/ACK/RST",
        "prefix": "coapdata:type"
    },
    "coapdata:data": {
        "body": "coapdata:data()",
        "description": "\u83b7\u53d6coap\u6570\u636e\u5305\u7684data",
        "prefix": "coapdata:data"
    },
    "libgnss.parse": {
        "body": "libgnss.parse(${1:str})",
        "description": "\u5904\u7406nmea\u6570\u636e",
        "prefix": "libgnss.parse"
    },
    "libgnss.isFix": {
        "body": "libgnss.isFix()",
        "description": "\u5f53\u524d\u662f\u5426\u5df2\u7ecf\u5b9a\u4f4d\u6210\u529f",
        "prefix": "libgnss.isFix"
    },
    "libgnss.getIntLocation": {
        "body": "libgnss.getIntLocation()",
        "description": "\u83b7\u53d6\u4f4d\u7f6e\u4fe1\u606f",
        "prefix": "libgnss.getIntLocation"
    },
    "libgnss.getRmc": {
        "body": "libgnss.getRmc()",
        "description": "\u83b7\u53d6\u539f\u59cbRMC\u4f4d\u7f6e\u4fe1\u606f",
        "prefix": "libgnss.getRmc"
    },
    "libgnss.getGsv": {
        "body": "libgnss.getGsv()",
        "description": "\u83b7\u53d6\u539f\u59cbGSV\u4fe1\u606f",
        "prefix": "libgnss.getGsv"
    },
    "libgnss.getGsa": {
        "body": "libgnss.getGsa()",
        "description": "\u83b7\u53d6\u539f\u59cbGSA\u4fe1\u606f",
        "prefix": "libgnss.getGsa"
    },
    "libgnss.getVtg": {
        "body": "libgnss.getVtg()",
        "description": "\u83b7\u53d6\u539f\u59cbVTA\u4f4d\u7f6e\u4fe1\u606f",
        "prefix": "libgnss.getVtg"
    },
    "log.setLevel": {
        "body": "log.setLevel(${1:level})",
        "description": "\u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b",
        "prefix": "log.setLevel"
    },
    "log.getLevel": {
        "body": "log.getLevel()",
        "description": "\u83b7\u53d6\u65e5\u5fd7\u7ea7\u522b",
        "prefix": "log.getLevel"
    },
    "log.debug": {
        "body": "log.debug(${1:tag},${2:val},${3:val2},${4:val3},${5:...})",
        "description": "\u8f93\u51fa\u65e5\u5fd7,\u7ea7\u522bdebug",
        "prefix": "log.debug"
    },
    "log.info": {
        "body": "log.info(${1:tag},${2:val},${3:val2},${4:val3},${5:...})",
        "description": "\u8f93\u51fa\u65e5\u5fd7,\u7ea7\u522binfo",
        "prefix": "log.info"
    },
    "log.warn": {
        "body": "log.warn(${1:tag},${2:val},${3:val2},${4:val3},${5:...})",
        "description": "\u8f93\u51fa\u65e5\u5fd7,\u7ea7\u522bwarn",
        "prefix": "log.warn"
    },
    "log.error": {
        "body": "log.error(${1:tag},${2:val},${3:val2},${4:val3},${5:...})",
        "description": "\u8f93\u51fa\u65e5\u5fd7,\u7ea7\u522berror",
        "prefix": "log.error"
    },
    "lpmem.read": {
        "body": "lpmem.read(${1:offset},${2:size})",
        "description": "\u8bfb\u53d6\u5185\u5b58\u5757",
        "prefix": "lpmem.read"
    },
    "lpmem.write": {
        "body": "lpmem.write(${1:offset},${2:str})",
        "description": "\u5199\u5165\u5185\u5b58\u5757",
        "prefix": "lpmem.write"
    },
    "lpmem.size": {
        "body": "lpmem.size()",
        "description": "\u83b7\u53d6\u5185\u5b58\u5757\u7684\u603b\u5927\u5c0f",
        "prefix": "lpmem.size"
    },
    "lvgl.draw_mask_radius_param_t": {
        "body": "lvgl.draw_mask_radius_param_t()",
        "description": "\u521b\u5efa\u4e00\u4e2alv_draw_mask_radius_param_t",
        "prefix": "lvgl.draw_mask_radius_param_t"
    },
    "lvgl.draw_mask_radius_param_t_free": {
        "body": "lvgl.draw_mask_radius_param_t_free(${1:radius})",
        "description": "\u91ca\u653e\u4e00\u4e2alv_draw_mask_radius_param_t",
        "prefix": "lvgl.draw_mask_radius_param_t_free"
    },
    "lvgl.draw_mask_line_param_t": {
        "body": "lvgl.draw_mask_line_param_t()",
        "description": "\u521b\u5efa\u4e00\u4e2alv_draw_mask_line_param_t",
        "prefix": "lvgl.draw_mask_line_param_t"
    },
    "lvgl.draw_mask_line_param_t_free": {
        "body": "lvgl.draw_mask_line_param_t_free(${1:line})",
        "description": "\u91ca\u653e\u4e00\u4e2alv_draw_mask_line_param_t",
        "prefix": "lvgl.draw_mask_line_param_t_free"
    },
    "lvgl.draw_mask_fade_param_t": {
        "body": "lvgl.draw_mask_fade_param_t()",
        "description": "\u521b\u5efa\u4e00\u4e2alv_draw_mask_fade_param_t",
        "prefix": "lvgl.draw_mask_fade_param_t"
    },
    "lvgl.draw_mask_fade_param_t_free": {
        "body": "lvgl.draw_mask_fade_param_t_free(${1:fade})",
        "description": "\u91ca\u653e\u4e00\u4e2alv_draw_mask_fade_param_t",
        "prefix": "lvgl.draw_mask_fade_param_t_free"
    },
    "lvgl.font_get": {
        "body": "lvgl.font_get(${1:name})",
        "description": "\u83b7\u53d6\u5185\u7f6e\u5b57\u4f53",
        "prefix": "lvgl.font_get"
    },
    "lvgl.font_load": {
        "body": "lvgl.font_load(${1:path})",
        "description": "\u4ece\u6587\u4ef6\u7cfb\u7edf\u52a0\u8f7d\u5b57\u4f53",
        "prefix": "lvgl.font_load"
    },
    "lvgl.font_free": {
        "body": "lvgl.font_free(${1:font})",
        "description": "\u91ca\u653e\u5b57\u4f53,\u614e\u7528!!!\u4ec5\u901a\u8fc7font_load\u52a0\u8f7d\u7684\u5b57\u4f53\u5141\u8bb8\u5378\u8f7d,\u901a\u8fc7font_get\u83b7\u53d6\u7684\u5b57\u4f53\u4e0d\u5141\u8bb8\u5378\u8f7d",
        "prefix": "lvgl.font_free"
    },
    "lvgl.obj_set_event_cb": {
        "body": "lvgl.obj_set_event_cb(${1:obj},${2:func})",
        "description": "\u8bbe\u7f6e\u7ec4\u4ef6\u7684\u4e8b\u4ef6\u56de\u8c03",
        "prefix": "lvgl.obj_set_event_cb"
    },
    "lvgl.obj_set_signal_cb": {
        "body": "lvgl.obj_set_signal_cb(${1:obj},${2:func})",
        "description": "\u8bbe\u7f6e\u7ec4\u4ef6\u7684\u4fe1\u53f7\u56de\u8c03",
        "prefix": "lvgl.obj_set_signal_cb"
    },
    "lvgl.anim_set_exec_cb": {
        "body": "lvgl.anim_set_exec_cb(${1:anim},${2:func})",
        "description": "\u8bbe\u7f6e\u52a8\u753b\u56de\u8c03",
        "prefix": "lvgl.anim_set_exec_cb"
    },
    "lvgl.anim_set_ready_cb": {
        "body": "lvgl.anim_set_ready_cb(${1:anim},${2:func})",
        "description": "\u8bbe\u7f6e\u52a8\u753b\u56de\u8c03",
        "prefix": "lvgl.anim_set_ready_cb"
    },
    "lvgl.anim_path_set_cb": {
        "body": "lvgl.anim_path_set_cb(${1:path},${2:func})",
        "description": "\u8bbe\u7f6e\u52a8\u753b\u56de\u8c03",
        "prefix": "lvgl.anim_path_set_cb"
    },
    "lvgl.scr_act": {
        "body": "lvgl.scr_act()",
        "description": "\u83b7\u53d6\u5f53\u524d\u6d3b\u8dc3\u7684screen\u5bf9\u8c61",
        "prefix": "lvgl.scr_act"
    },
    "lvgl.layout_top": {
        "body": "lvgl.layout_top()",
        "description": "\u83b7\u53d6layout_top",
        "prefix": "lvgl.layout_top"
    },
    "lvgl.layout_sys": {
        "body": "lvgl.layout_sys()",
        "description": "\u83b7\u53d6layout_sys",
        "prefix": "lvgl.layout_sys"
    },
    "lvgl.scr_load": {
        "body": "lvgl.scr_load(${1:scr})",
        "description": "\u8f7d\u5165\u6307\u5b9a\u7684screen",
        "prefix": "lvgl.scr_load"
    },
    "lvgl.anim_create": {
        "body": "lvgl.anim_create()",
        "description": "\u521b\u5efa\u5e76\u521d\u59cb\u5316\u4e00\u4e2aanim",
        "prefix": "lvgl.anim_create"
    },
    "lvgl.anim_free": {
        "body": "lvgl.anim_free(${1:anim})",
        "description": "\u91ca\u653e\u4e00\u4e2aanim",
        "prefix": "lvgl.anim_free"
    },
    "lvgl.anim_path_t": {
        "body": "lvgl.anim_path_t()",
        "description": "\u521b\u5efa\u4e00\u4e2alv_anim_path_t",
        "prefix": "lvgl.anim_path_t"
    },
    "lvgl.anim_path_t_free": {
        "body": "lvgl.anim_path_t_free(${1:anim_path_t})",
        "description": "\u91ca\u653e\u4e00\u4e2alv_anim_path_t",
        "prefix": "lvgl.anim_path_t_free"
    },
    "lvgl.anim_set_path_str": {
        "body": "lvgl.anim_set_path_str(${1:anim},${2:tp})",
        "description": "\u8bbe\u7f6e\u52a8\u753b\u8def\u5f84\u65b9\u5f0f",
        "prefix": "lvgl.anim_set_path_str"
    },
    "lvgl.qrcode_create": {
        "body": "lvgl.qrcode_create(${1:parent},${2:size},${3:dark_color},${4:light_color})",
        "description": "\u521b\u5efaqrcode\u7ec4\u4ef6",
        "prefix": "lvgl.qrcode_create"
    },
    "lvgl.qrcode_update": {
        "body": "lvgl.qrcode_update(${1:qrcode},${2:cnt})",
        "description": "\u8bbe\u7f6eqrcode\u7ec4\u4ef6\u7684\u4e8c\u7ef4\u7801\u5185\u5bb9,\u914d\u5408qrcode_create\u4f7f\u7528",
        "prefix": "lvgl.qrcode_update"
    },
    "lvgl.qrcode_delete": {
        "body": "lvgl.qrcode_delete(${1:qrcode})",
        "description": "\u5220\u9664qrcode\u7ec4\u4ef6",
        "prefix": "lvgl.qrcode_delete"
    },
    "lvgl.style_t": {
        "body": "lvgl.style_t()",
        "description": "\u521b\u5efa\u4e00\u4e2astyle",
        "prefix": "lvgl.style_t"
    },
    "lvgl.style_create": {
        "body": "lvgl.style_create()",
        "description": "\u521b\u5efa\u4e00\u4e2astyle\u5e76\u521d\u59cb\u5316",
        "prefix": "lvgl.style_create"
    },
    "lvgl.style_list_create": {
        "body": "lvgl.style_list_create()",
        "description": "\u521b\u5efa\u4e00\u4e2astyle_list",
        "prefix": "lvgl.style_list_create"
    },
    "lvgl.style_list_t": {
        "body": "lvgl.style_list_t()",
        "description": "\u521b\u5efa\u4e00\u4e2astyle_list",
        "prefix": "lvgl.style_list_t"
    },
    "lvgl.style_delete": {
        "body": "lvgl.style_delete(${1:style})",
        "description": "\u5220\u9664style_list,\u614e\u7528,\u901a\u5e38\u4e0d\u4f1a\u6267\u884c\u5220\u9664\u64cd\u4f5c",
        "prefix": "lvgl.style_delete"
    },
    "lvgl.indev_drv_register": {
        "body": "lvgl.indev_drv_register(${1:tp},${2:dtp})",
        "description": "\u6ce8\u518c\u8f93\u5165\u8bbe\u5907\u9a71\u52a8",
        "prefix": "lvgl.indev_drv_register"
    },
    "lvgl.indev_point_emulator_update": {
        "body": "lvgl.indev_point_emulator_update(${1:x},${2:y},${3:state})",
        "description": "\u66f4\u65b0\u6a21\u62df\u8f93\u5165\u8bbe\u5907\u7684\u5750\u6807\u6570\u636e",
        "prefix": "lvgl.indev_point_emulator_update"
    },
    "lvgl.gif_create": {
        "body": "lvgl.gif_create(${1:parent},${2:path})",
        "description": "\u521b\u5efagif\u7ec4\u4ef6",
        "prefix": "lvgl.gif_create"
    },
    "lvgl.gif_restart": {
        "body": "lvgl.gif_restart(${1:gif})",
        "description": "\u91cd\u65b0\u64ad\u653egif\u7ec4\u4ef6",
        "prefix": "lvgl.gif_restart"
    },
    "mcu.setClk": {
        "body": "mcu.setClk(${1:mhz})",
        "description": "\u8bbe\u7f6e\u4e3b\u9891,\u5355\u4f4dMHZ. \u8bf7\u6ce8\u610f,\u4e3b\u9891\u4e0e\u5916\u8bbe\u4e3b\u9891\u6709\u5173\u8054\u6027, \u4f8b\u5982\u4e3b\u98912M\u65f6SPI\u7684\u6700\u9ad8\u53ea\u80fd1M",
        "prefix": "mcu.setClk"
    },
    "mcu.getClk": {
        "body": "mcu.getClk()",
        "description": "\u83b7\u53d6\u4e3b\u9891,\u5355\u4f4dMHZ.",
        "prefix": "mcu.getClk"
    },
    "mcu.unique_id": {
        "body": "mcu.unique_id()",
        "description": "\u83b7\u53d6\u8bbe\u5907\u552f\u4e00id. \u6ce8\u610f,\u53ef\u80fd\u5305\u542b\u4e0d\u53ef\u5b57\u7b26,\u5982\u9700\u67e5\u770b\u5efa\u8baetoHex()\u540e\u6253\u5370",
        "prefix": "mcu.unique_id"
    },
    "mcu.ticks": {
        "body": "mcu.ticks()",
        "description": "\u83b7\u53d6\u542f\u52a8\u540e\u7684tick\u6570,\u6ce8\u610f\u4f1a\u51fa\u73b0\u6ea2\u51fa\u4f1a\u51fa\u73b0\u8d1f\u6570",
        "prefix": "mcu.ticks"
    },
    "nbiot.isReady": {
        "body": "nbiot.isReady()",
        "description": "\u7f51\u7edc\u662f\u5426\u5c31\u7eea",
        "prefix": "nbiot.isReady"
    },
    "nbiot.imsi": {
        "body": "nbiot.imsi()",
        "description": "\u8bfb\u53d6IMSI",
        "prefix": "nbiot.imsi"
    },
    "nbiot.iccid": {
        "body": "nbiot.iccid()",
        "description": "\u8bfb\u53d6ICCID",
        "prefix": "nbiot.iccid"
    },
    "nbiot.imei": {
        "body": "nbiot.imei(${1:val})",
        "description": "\u8bfb\u53d6\u6216\u8bbe\u7f6eIMEI",
        "prefix": "nbiot.imei"
    },
    "nbiot.rssi": {
        "body": "nbiot.rssi()",
        "description": "\u8bfb\u53d6RSSI",
        "prefix": "nbiot.rssi"
    },
    "nbiot.apn": {
        "body": "nbiot.apn()",
        "description": "\u8bfb\u53d6APN",
        "prefix": "nbiot.apn"
    },
    "nbiot.userApn": {
        "body": "nbiot.userApn(${1:apn},${2:Auth_User_Name},${3:Auth_Password},${4:PDN_TYPE})",
        "description": "\u8bfb\u53d6\u8bbe\u7f6e\u7528\u6237APN",
        "prefix": "nbiot.userApn"
    },
    "nbiot.tac": {
        "body": "nbiot.tac()",
        "description": "\u8bfb\u53d6TAC",
        "prefix": "nbiot.tac"
    },
    "nbiot.tauTime": {
        "body": "nbiot.tauTime()",
        "description": "\u8bfb\u53d6Tau Time",
        "prefix": "nbiot.tauTime"
    },
    "nbiot.activeTime": {
        "body": "nbiot.activeTime()",
        "description": "\u8bfb\u53d6Active Time",
        "prefix": "nbiot.activeTime"
    },
    "nbiot.cellID": {
        "body": "nbiot.cellID()",
        "description": "\u8bfb\u53d6CellID",
        "prefix": "nbiot.cellID"
    },
    "nbiot.snr": {
        "body": "nbiot.snr()",
        "description": "\u8bfb\u53d6SNR",
        "prefix": "nbiot.snr"
    },
    "nbiot.csq": {
        "body": "nbiot.csq()",
        "description": "\u8bfb\u53d6CSQ, \u5e76\u4e0d\u5b8c\u5168\u7b49\u4ef7\u4e8eGSM\u7684CSQ",
        "prefix": "nbiot.csq"
    },
    "nbiot.ceLevel": {
        "body": "nbiot.ceLevel()",
        "description": "\u8bfb\u53d6CE Level",
        "prefix": "nbiot.ceLevel"
    },
    "nbiot.sn": {
        "body": "nbiot.sn(${1:val})",
        "description": "\u8bfb\u53d6\u6216\u8bbe\u7f6eSN,\u666e\u901a\u5237\u673a(\u5237\u5e95\u5c42/\u5237\u811a\u672c)\u4e0d\u4f1a\u6e05\u9664",
        "prefix": "nbiot.sn"
    },
    "nbiot.updateCellInfo": {
        "body": "nbiot.updateCellInfo()",
        "description": "\u5237\u65b0\u7f51\u7edc\u4fe1\u606f,\u53ef\u901a\u8fc7\u5b9a\u65f6\u4efb\u52a1\u5237\u65b0,\u6700\u5c0f\u95f4\u96945\u79d2",
        "prefix": "nbiot.updateCellInfo"
    },
    "nbiot.mcc": {
        "body": "nbiot.mcc()",
        "description": "\u8bfb\u53d6MCC\u503c,\u6ce8\u518c\u7f51\u7edc\u540e\u53ef\u7528,\u901a\u8fc7nbiot.updateCellInfo()\u5237\u65b0",
        "prefix": "nbiot.mcc"
    },
    "nbiot.mnc": {
        "body": "nbiot.mnc()",
        "description": "\u8bfb\u53d6MNC\u503c,\u6ce8\u518c\u7f51\u7edc\u540e\u53ef\u7528,\u901a\u8fc7nbiot.updateCellInfo()\u5237\u65b0",
        "prefix": "nbiot.mnc"
    },
    "nbiot.earfcn": {
        "body": "nbiot.earfcn()",
        "description": "\u8bfb\u53d6earfcn\u503c,\u6ce8\u518c\u7f51\u7edc\u540e\u53ef\u7528,\u901a\u8fc7nbiot.updateCellInfo()\u5237\u65b0",
        "prefix": "nbiot.earfcn"
    },
    "nbiot.phyCellId": {
        "body": "nbiot.phyCellId()",
        "description": "\u8bfb\u53d6phyCellId\u503c,\u6ce8\u518c\u7f51\u7edc\u540e\u53ef\u7528,\u901a\u8fc7nbiot.updateCellInfo()\u5237\u65b0",
        "prefix": "nbiot.phyCellId"
    },
    "nbiot.rsrq": {
        "body": "nbiot.rsrq()",
        "description": "\u8bfb\u53d6rsrq\u503c,\u6ce8\u518c\u7f51\u7edc\u540e\u53ef\u7528,\u901a\u8fc7nbiot.updateCellInfo()\u5237\u65b0",
        "prefix": "nbiot.rsrq"
    },
    "nbiot.rsrp": {
        "body": "nbiot.rsrp()",
        "description": "\u8bfb\u53d6rsrp\u503c,\u6ce8\u518c\u7f51\u7edc\u540e\u53ef\u7528,\u901a\u8fc7nbiot.updateCellInfo()\u5237\u65b0",
        "prefix": "nbiot.rsrp"
    },
    "nbiot.powerLevel": {
        "body": "nbiot.powerLevel()",
        "description": "\u8bfb\u53d6PowerLevel\u503c,\u6ce8\u518c\u7f51\u7edc\u540e\u53ef\u7528,\u901a\u8fc7nbiot.updateCellInfo()\u5237\u65b0",
        "prefix": "nbiot.powerLevel"
    },
    "nbiot.getCellInfo": {
        "body": "nbiot.getCellInfo()",
        "description": "\u83b7\u53d6\u7f51\u7edc\u57fa\u7ad9\u8be6\u60c5,\u6ce8\u518c\u7f51\u7edc\u540e\u53ef\u7528,\u901a\u8fc7nbiot.updateCellInfo()\u5237\u65b0",
        "prefix": "nbiot.getCellInfo"
    },
    "nbiot.setCFUN": {
        "body": "nbiot.setCFUN(${1:val})",
        "description": "\u8fdb\u5165\u6216\u9000\u51fa\u98de\u884c\u6a21\u5f0f",
        "prefix": "nbiot.setCFUN"
    },
    "nbiot.setBootCFUN": {
        "body": "nbiot.setBootCFUN(${1:val})",
        "description": "\u8bbe\u7f6e\u8bbe\u5907\u4e0a\u7535\u542f\u52a8\u65f6\uff0c\u662f\u5426\u8fdb\u5165\u98de\u884c\u6a21\u5f0f",
        "prefix": "nbiot.setBootCFUN"
    },
    "nbiot.getBootCFUN": {
        "body": "nbiot.getBootCFUN(${1:val})",
        "description": "\u83b7\u53d6\u8bbe\u5907\u4e0a\u7535\u542f\u52a8\u65f6\uff0c\u662f\u5426\u8fdb\u5165\u98de\u884c\u6a21\u5f0f",
        "prefix": "nbiot.getBootCFUN"
    },
    "nbiot.setPSM": {
        "body": "nbiot.setPSM(${1:psmMode},${2:tauTimeS},${3:activeTimeS})",
        "description": "\u8bbe\u7f6ePSM\u53c2\u6570",
        "prefix": "nbiot.setPSM"
    },
    "nbiot.setEDRX": {
        "body": "nbiot.setEDRX(${1:modeVal},${2:actType},${3:reqEdrxValueMs})",
        "description": "\u8bbe\u7f6eEDRX\u53c2\u6570",
        "prefix": "nbiot.setEDRX"
    },
    "nbiot.getPSM": {
        "body": "nbiot.getPSM()",
        "description": "\u83b7\u53d6PSM\u53c2\u6570",
        "prefix": "nbiot.getPSM"
    },
    "nbiot.getEDRX": {
        "body": "nbiot.getEDRX()",
        "description": "\u83b7\u53d6EDRX\u53c2\u6570",
        "prefix": "nbiot.getEDRX"
    },
    "nbiot.setTZ": {
        "body": "nbiot.setTZ(${1:tz},${2:auto})",
        "description": "\u8bbe\u7f6e\u65f6\u533a\u53c2\u6570",
        "prefix": "nbiot.setTZ"
    },
    "nbiot.getTZ": {
        "body": "nbiot.getTZ()",
        "description": "\u83b7\u53d6\u65f6\u533a\u53c2\u6570",
        "prefix": "nbiot.getTZ"
    },
    "nbiot.setBands": {
        "body": "nbiot.setBands(${1:modes})",
        "description": "\u8bbe\u7f6eBand\u6a21\u5f0f(\u6682\u4e0d\u53ef\u7528)",
        "prefix": "nbiot.setBands"
    },
    "nbiot.getBands": {
        "body": "nbiot.getBands()",
        "description": "\u83b7\u53d6\u5f53\u524d\u4f7f\u7528\u7684Band\u6a21\u5f0f(\u6682\u4e0d\u53ef\u7528)",
        "prefix": "nbiot.getBands"
    },
    "nbiot.setEDRXPtw": {
        "body": "nbiot.setEDRXPtw(${1:val})",
        "description": "\u8bbe\u7f6eEDRX PTW\u53c2\u6570",
        "prefix": "nbiot.setEDRXPtw"
    },
    "nbiot.getEDRXPtw": {
        "body": "nbiot.getEDRXPtw()",
        "description": "\u83b7\u53d6EDRX PTW\u53c2\u6570",
        "prefix": "nbiot.getEDRXPtw"
    },
    "nbiot.ticks": {
        "body": "nbiot.ticks()",
        "description": "\u83b7\u53d6tick\u8ba1\u6570",
        "prefix": "nbiot.ticks"
    },
    "pm.request": {
        "body": "pm.request(${1:mode})",
        "description": "\u8bf7\u6c42\u8fdb\u5165\u6307\u5b9a\u7684\u4f11\u7720\u6a21\u5f0f",
        "prefix": "pm.request"
    },
    "pm.dtimerStart": {
        "body": "pm.dtimerStart(${1:id},${2:timeout})",
        "description": "\u542f\u52a8\u5e95\u5c42\u5b9a\u65f6\u5668,\u5728\u4f11\u7720\u6a21\u5f0f\u4e0b\u4f9d\u7136\u751f\u6548. \u53ea\u89e6\u53d1\u4e00\u6b21",
        "prefix": "pm.dtimerStart"
    },
    "pm.dtimerStop": {
        "body": "pm.dtimerStop(${1:id})",
        "description": "\u5173\u95ed\u5e95\u5c42\u5b9a\u65f6\u5668",
        "prefix": "pm.dtimerStop"
    },
    "pm.dtimerCheck": {
        "body": "pm.dtimerCheck(${1:id})",
        "description": "\u68c0\u67e5\u5e95\u5c42\u5b9a\u65f6\u5668\u662f\u4e0d\u662f\u5728\u8fd0\u884c",
        "prefix": "pm.dtimerCheck"
    },
    "pm.lastReson": {
        "body": "pm.lastReson()",
        "description": "\u5f00\u673a\u539f\u56e0,\u7528\u4e8e\u5224\u65ad\u662f\u4ece\u4f11\u7720\u6a21\u5757\u5f00\u673a,\u8fd8\u662f\u7535\u6e90/\u590d\u4f4d\u5f00\u673a",
        "prefix": "pm.lastReson"
    },
    "pm.force": {
        "body": "pm.force(${1:mode})",
        "description": "\u5f3a\u5236\u8fdb\u5165\u6307\u5b9a\u7684\u4f11\u7720\u6a21\u5f0f",
        "prefix": "pm.force"
    },
    "pm.check": {
        "body": "pm.check()",
        "description": "\u68c0\u67e5\u4f11\u7720\u72b6\u6001",
        "prefix": "pm.check"
    },
    "pwm.open": {
        "body": "pwm.open(${1:channel},${2:period},${3:pulse},${4:pnum})",
        "description": "\u5f00\u542f\u6307\u5b9a\u7684PWM\u901a\u9053",
        "prefix": "pwm.open"
    },
    "pwm.close": {
        "body": "pwm.close(${1:channel})",
        "description": "\u5173\u95ed\u6307\u5b9a\u7684PWM\u901a\u9053",
        "prefix": "pwm.close"
    },
    "pwm.capture": {
        "body": "pwm.capture(${1:channel})",
        "description": "PWM\u6355\u83b7",
        "prefix": "pwm.capture"
    },
    "rtc.set": {
        "body": "rtc.set(${1:tab})",
        "description": "\u8bbe\u7f6e\u65f6\u949f",
        "prefix": "rtc.set"
    },
    "rtc.get": {
        "body": "rtc.get()",
        "description": "\u83b7\u53d6\u65f6\u949f",
        "prefix": "rtc.get"
    },
    "rtc.timerStart": {
        "body": "rtc.timerStart(${1:id},${2:tab})",
        "description": "\u8bbe\u7f6eRTC\u5524\u9192\u65f6\u95f4",
        "prefix": "rtc.timerStart"
    },
    "rtc.timerStop": {
        "body": "rtc.timerStop(${1:id})",
        "description": "\u53d6\u6d88RTC\u5524\u9192\u65f6\u95f4",
        "prefix": "rtc.timerStop"
    },
    "rtc.setBaseYear": {
        "body": "rtc.setBaseYear(${1:Base_year})",
        "description": "\u8bbe\u7f6eRTC\u57fa\u51c6\u5e74",
        "prefix": "rtc.setBaseYear"
    },
    "rtos.receive": {
        "body": "rtos.receive(${1:timeout})",
        "description": "\u63a5\u53d7\u5e76\u5904\u7406\u5e95\u5c42\u6d88\u606f\u961f\u5217.",
        "prefix": "rtos.receive"
    },
    "rtos.timer_start": {
        "body": "rtos.timer_start(${1:id},${2:timeout},${3:_repeat})",
        "description": "\u542f\u52a8\u4e00\u4e2a\u5b9a\u65f6\u5668",
        "prefix": "rtos.timer_start"
    },
    "rtos.timer_stop": {
        "body": "rtos.timer_stop(${1:id})",
        "description": "\u5173\u95ed\u5e76\u91ca\u653e\u4e00\u4e2a\u5b9a\u65f6\u5668",
        "prefix": "rtos.timer_stop"
    },
    "rtos.reboot": {
        "body": "rtos.reboot()",
        "description": "\u8bbe\u5907\u91cd\u542f",
        "prefix": "rtos.reboot"
    },
    "rtos.buildDate": {
        "body": "rtos.buildDate()",
        "description": "\u83b7\u53d6\u56fa\u4ef6\u7f16\u8bd1\u65e5\u671f",
        "prefix": "rtos.buildDate"
    },
    "rtos.bsp": {
        "body": "rtos.bsp()",
        "description": "\u83b7\u53d6\u786c\u4ef6bsp\u578b\u53f7",
        "prefix": "rtos.bsp"
    },
    "rtos.version": {
        "body": "rtos.version()",
        "description": "\u83b7\u53d6\u56fa\u4ef6\u7248\u672c\u53f7",
        "prefix": "rtos.version"
    },
    "rtos.standy": {
        "body": "rtos.standy(${1:timeout})",
        "description": "\u8fdb\u5165\u5f85\u673a\u6a21\u5f0f(\u90e8\u5206\u8bbe\u5907\u53ef\u7528,\u4f8b\u5982w60x)",
        "prefix": "rtos.standy"
    },
    "rtos.meminfo": {
        "body": "rtos.meminfo(${1:type})",
        "description": "\u83b7\u53d6\u5185\u5b58\u4fe1\u606f",
        "prefix": "rtos.meminfo"
    },
    "rtos.firmware": {
        "body": "rtos.firmware()",
        "description": "\u8fd4\u56de\u5e95\u5c42\u63cf\u8ff0\u4fe1\u606f,\u683c\u5f0f\u4e3a LuatOS_$VERSION_$BSP,\u53ef\u7528\u4e8eOTA\u5347\u7ea7\u5224\u65ad\u5e95\u5c42\u4fe1\u606f",
        "prefix": "rtos.firmware"
    },
    "rtos.setPaths": {
        "body": "rtos.setPaths(${1:pathA},${2:pathB},${3:pathC},${4:pathD})",
        "description": "\u8bbe\u7f6e\u81ea\u5b9a\u4e49lua\u811a\u672c\u641c\u7d22\u8def\u5f84,\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5185\u7f6e\u8def\u5f84",
        "prefix": "rtos.setPaths"
    },
    "sdio.init": {
        "body": "sdio.init(${1:id})",
        "description": "\u521d\u59cb\u5316sdio",
        "prefix": "sdio.init"
    },
    "sdio.sd_read": {
        "body": "sdio.sd_read(${1:id},${2:offset},${3:len})",
        "description": "\u76f4\u63a5\u8bfb\u5199sd\u5361\u4e0a\u7684\u6570\u636e",
        "prefix": "sdio.sd_read"
    },
    "sdio.sd_write": {
        "body": "sdio.sd_write(${1:id},${2:data},${3:offset})",
        "description": "\u76f4\u63a5\u5199sd\u5361",
        "prefix": "sdio.sd_write"
    },
    "sdio.sd_mount": {
        "body": "sdio.sd_mount(${1:id},${2:path},${3:auto_format})",
        "description": "\u6302\u8f7dSD\u5361, \u4f7f\u7528FATFS\u6587\u4ef6\u7cfb\u7edf",
        "prefix": "sdio.sd_mount"
    },
    "sdio.sd_unmount": {
        "body": "sdio.sd_unmount(${1:id},${2:path})",
        "description": "\u5378\u8f7dSD\u5361(\u89c6\u786c\u4ef6\u60c5\u51b5, \u4e0d\u4e00\u5b9a\u652f\u6301)",
        "prefix": "sdio.sd_unmount"
    },
    "sdio.sd_format": {
        "body": "sdio.sd_format(${1:id})",
        "description": "\u683c\u5f0f\u5316SD\u5361",
        "prefix": "sdio.sd_format"
    },
    "sensor.ds18b20": {
        "body": "sensor.ds18b20(${1:pin})",
        "description": "\u83b7\u53d6DS18B20\u7684\u6e29\u5ea6\u6570\u636e",
        "prefix": "sensor.ds18b20"
    },
    "sensor.w1_reset": {
        "body": "sensor.w1_reset(${1:pin})",
        "description": "\u5355\u603b\u7ebf\u534f\u8bae,\u8fde\u63a5\u8bbe\u5907",
        "prefix": "sensor.w1_reset"
    },
    "sensor.w1_write": {
        "body": "sensor.w1_write(${1:pin},${2:data1},${3:data2})",
        "description": "\u5355\u603b\u7ebf\u534f\u8bae,\u5f80\u603b\u7ebf\u5199\u5165\u6570\u636e",
        "prefix": "sensor.w1_write"
    },
    "sensor.w1_read": {
        "body": "sensor.w1_read(${1:pin},${2:len})",
        "description": "\u5355\u603b\u7ebf\u534f\u8bae,\u4ece\u603b\u7ebf\u8bfb\u53d6\u6570\u636e",
        "prefix": "sensor.w1_read"
    },
    "sensor.hx711": {
        "body": "sensor.hx711(${1:pin_date},${2:pin_clk})",
        "description": "\u83b7\u53d6Hx711\u7684\u6e29\u5ea6\u6570\u636e",
        "prefix": "sensor.hx711"
    },
    "sensor.ws2812b": {
        "body": "sensor.ws2812b(${1:pin},${2:data},${3:T0H},${4:T0L},${5:T1H},${6:T1L})",
        "description": "\u8bbe\u7f6ews2812b\u8f93\u51fa",
        "prefix": "sensor.ws2812b"
    },
    "sfd.init": {
        "body": "sfd.init(${1:type},${2:spi_id},${3:spi_cs})",
        "description": "\u521d\u59cb\u5316spi flash",
        "prefix": "sfd.init"
    },
    "sfd.status": {
        "body": "sfd.status(${1:drv})",
        "description": "\u68c0\u67e5spi flash\u72b6\u6001",
        "prefix": "sfd.status"
    },
    "sfd.read": {
        "body": "sfd.read(${1:drv},${2:offset},${3:len})",
        "description": "\u8bfb\u53d6\u6570\u636e",
        "prefix": "sfd.read"
    },
    "sfd.write": {
        "body": "sfd.write(${1:drv},${2:offset},${3:data})",
        "description": "\u5199\u5165\u6570\u636e",
        "prefix": "sfd.write"
    },
    "sfd.erase": {
        "body": "sfd.erase(${1:drv},${2:offset})",
        "description": "\u64e6\u9664\u6570\u636e",
        "prefix": "sfd.erase"
    },
    "sfd.id": {
        "body": "sfd.id(${1:drv})",
        "description": "\u82af\u7247\u552f\u4e00id",
        "prefix": "sfd.id"
    },
    "sfud.init": {
        "body": "sfud.init(${1:spi_id},${2:spi_cs},${3:spi_bandrate)/sfud.init(spi_device})",
        "description": "\u521d\u59cb\u5316sfud",
        "prefix": "sfud.init"
    },
    "sfud.getDeviceNum": {
        "body": "sfud.getDeviceNum()",
        "description": "\u83b7\u53d6flash\u8bbe\u5907\u4fe1\u606f\u8868\u4e2d\u7684\u8bbe\u5907\u603b\u6570",
        "prefix": "sfud.getDeviceNum"
    },
    "sfud.getDevice": {
        "body": "sfud.getDevice(${1:index})",
        "description": "\u901a\u8fc7flash\u4fe1\u606f\u8868\u4e2d\u7684\u7d22\u5f15\u83b7\u53d6flash\u8bbe\u5907",
        "prefix": "sfud.getDevice"
    },
    "sfud.getDeviceTable": {
        "body": "sfud.getDeviceTable()",
        "description": "\u83b7\u53d6flash\u8bbe\u5907\u4fe1\u606f\u8868",
        "prefix": "sfud.getDeviceTable"
    },
    "sfud.chipErase": {
        "body": "sfud.chipErase(${1:flash})",
        "description": "\u64e6\u9664 Flash \u5168\u90e8\u6570\u636e",
        "prefix": "sfud.chipErase"
    },
    "sfud.chip_erase": {
        "body": "sfud.chip_erase(${1:flash})",
        "description": "\u64e6\u9664 Flash \u5168\u90e8\u6570\u636e",
        "prefix": "sfud.chip_erase"
    },
    "sfud.read": {
        "body": "sfud.read(${1:flash},${2:addr},${3:size})",
        "description": "\u8bfb\u53d6 Flash \u6570\u636e",
        "prefix": "sfud.read"
    },
    "sfud.write": {
        "body": "sfud.write(${1:flash},${2:addr},${3:size},${4:data})",
        "description": "\u5411 Flash \u5199\u6570\u636e",
        "prefix": "sfud.write"
    },
    "sfud.eraseWrite": {
        "body": "sfud.eraseWrite(${1:flash},${2:addr},${3:size},${4:data})",
        "description": "\u5148\u64e6\u9664\u518d\u5f80 Flash \u5199\u6570\u636e",
        "prefix": "sfud.eraseWrite"
    },
    "sfud.mount": {
        "body": "sfud.mount(${1:flash},${2:mount_point})",
        "description": "\u6302\u8f7dsfud lfs\u6587\u4ef6\u7cfb\u7edf",
        "prefix": "sfud.mount"
    },
    "socket.ntpSync": {
        "body": "socket.ntpSync(${1:server})",
        "description": "ntp\u65f6\u95f4\u540c\u6b65",
        "prefix": "socket.ntpSync"
    },
    "socket.tsend": {
        "body": "socket.tsend(${1:host},${2:port},${3:data})",
        "description": "\u76f4\u63a5\u5411\u5730\u5740\u53d1\u9001\u4e00\u6bb5\u6570\u636e",
        "prefix": "socket.tsend"
    },
    "socket.isReady": {
        "body": "socket.isReady()",
        "description": "\u7f51\u7edc\u662f\u5426\u5c31\u7eea",
        "prefix": "socket.isReady"
    },
    "socket.ip": {
        "body": "socket.ip()",
        "description": "\u83b7\u53d6\u81ea\u8eabip,\u901a\u5e38\u662f\u5185\u7f51ip",
        "prefix": "socket.ip"
    },
    "socket.tcp": {
        "body": "socket.tcp()",
        "description": "\u65b0\u5efa\u4e00\u4e2atcp socket",
        "prefix": "socket.tcp"
    },
    "socket.udp": {
        "body": "socket.udp()",
        "description": "\u65b0\u5efa\u4e00\u4e2audp socket",
        "prefix": "socket.udp"
    },
    "so:start": {
        "body": "so:start(${1:host},${2:port})",
        "description": "\u542f\u52a8socket\u7ebf\u7a0b",
        "prefix": "so:start"
    },
    "so:close": {
        "body": "so:close()",
        "description": "\u5173\u95edsocket\u5bf9\u8c61",
        "prefix": "so:close"
    },
    "so:send": {
        "body": "so:send(${1:data},${2:flags})",
        "description": "\u901a\u8fc7socket\u5bf9\u8c61\u53d1\u9001\u6570\u636e",
        "prefix": "so:send"
    },
    "so:id": {
        "body": "so:id()",
        "description": "\u83b7\u53d6socket\u5bf9\u8c61\u7684id",
        "prefix": "so:id"
    },
    "so:host": {
        "body": "so:host(${1:host})",
        "description": "\u8bbe\u7f6e\u670d\u52a1\u5668\u57df\u540d\u6216ip",
        "prefix": "so:host"
    },
    "so:port": {
        "body": "so:port(${1:port})",
        "description": "\u8bbe\u7f6e\u670d\u52a1\u5668\u7aef\u53e3",
        "prefix": "so:port"
    },
    "so:clean": {
        "body": "so:clean(${1:0})",
        "description": "\u6e05\u7406socket\u5173\u8054\u7684\u8d44\u6e90,socket\u5bf9\u8c61\u5728\u5e9f\u5f03\u524d\u5fc5\u987b\u8c03\u7528",
        "prefix": "so:clean"
    },
    "so:on": {
        "body": "so:on(${1:event},${2:func})",
        "description": "\u8bbe\u7f6esocket\u7684\u4e8b\u4ef6\u56de\u8c03",
        "prefix": "so:on"
    },
    "so:closed": {
        "body": "so:closed()",
        "description": "socket\u662f\u5426\u5df2\u7ecf\u65ad\u5f00?",
        "prefix": "so:closed"
    },
    "so:rebind": {
        "body": "so:rebind(${1:socket_id})",
        "description": "\u4e3anetclient\u7ed1\u5b9asocket id, \u8be5\u64cd\u4f5c\u4ec5\u5728NBIOT\u6a21\u5757\u4e0b\u6709\u610f\u4e49.",
        "prefix": "so:rebind"
    },
    "so:sockid": {
        "body": "so:sockid()",
        "description": "\u83b7\u53d6\u5e95\u5c42socket id",
        "prefix": "so:sockid"
    },
    "spi.setup": {
        "body": "spi.setup(${1:id},${2:cs},${3:CPHA},${4:CPOL},${5:dataw},${6:bandrate},${7:bitdict},${8:ms},${9:mode})",
        "description": "\u8bbe\u7f6e\u5e76\u542f\u7528SPI",
        "prefix": "spi.setup"
    },
    "spi.close": {
        "body": "spi.close(${1:id})",
        "description": "\u5173\u95ed\u6307\u5b9a\u7684SPI",
        "prefix": "spi.close"
    },
    "spi.transfer": {
        "body": "spi.transfer(${1:id},${2:send_data[},${3:len]})",
        "description": "\u4f20\u8f93SPI\u6570\u636e",
        "prefix": "spi.transfer"
    },
    "spi.recv": {
        "body": "spi.recv(${1:id},${2:size})",
        "description": "\u63a5\u6536\u6307\u5b9a\u957f\u5ea6\u7684SPI\u6570\u636e",
        "prefix": "spi.recv"
    },
    "spi.send": {
        "body": "spi.send(${1:id},${2:data[},${3:len]})",
        "description": "\u53d1\u9001SPI\u6570\u636e",
        "prefix": "spi.send"
    },
    "spi.deviceSetup": {
        "body": "spi.deviceSetup(${1:id},${2:cs},${3:CPHA},${4:CPOL},${5:dataw},${6:bandrate},${7:bitdict},${8:ms},${9:mode})",
        "description": "\u8bbe\u7f6e\u5e76\u542f\u7528SPI(\u5bf9\u8c61\u65b9\u5f0f)",
        "prefix": "spi.deviceSetup"
    },
    "spi_device:close": {
        "body": "spi_device:close()",
        "description": "\u5173\u95ed\u6307\u5b9a\u7684SPI(\u5bf9\u8c61\u65b9\u5f0f)",
        "prefix": "spi_device:close"
    },
    "spi_device:transfer": {
        "body": "spi_device:transfer(${1:send_data[},${2:len]})",
        "description": "\u4f20\u8f93SPI\u6570\u636e(\u5bf9\u8c61\u65b9\u5f0f)",
        "prefix": "spi_device:transfer"
    },
    "spi_device:send": {
        "body": "spi_device:send(${1:data[},${2:len]})",
        "description": "\u53d1\u9001SPI\u6570\u636e(\u5bf9\u8c61\u65b9\u5f0f)",
        "prefix": "spi_device:send"
    },
    "spi_device:recv": {
        "body": "spi_device:recv(${1:size})",
        "description": "\u63a5\u6536\u6307\u5b9a\u957f\u5ea6\u7684SPI\u6570\u636e(\u5bf9\u8c61\u65b9\u5f0f)",
        "prefix": "spi_device:recv"
    },
    "statem.create": {
        "body": "statem.create(${1:count},${2:repeat})",
        "description": "\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u72b6\u6001\u673a.",
        "prefix": "statem.create"
    },
    "string.toHex": {
        "body": "string.toHex(${1:str})",
        "description": "\u5c06\u5b57\u7b26\u4e32\u8f6c\u6210HEX",
        "prefix": "string.toHex"
    },
    "string.fromHex": {
        "body": "string.fromHex(${1:hex})",
        "description": "\u5c06HEX\u8f6c\u6210\u5b57\u7b26\u4e32",
        "prefix": "string.fromHex"
    },
    "string.split": {
        "body": "string.split(${1:str},${2:delimiter})",
        "description": "\u6309\u7167\u6307\u5b9a\u5206\u9694\u7b26\u5206\u5272\u5b57\u7b26\u4e32",
        "prefix": "string.split"
    },
    "string.toValue": {
        "body": "string.toValue(${1:str})",
        "description": "\u8fd4\u56de\u5b57\u7b26\u4e32tonumber\u7684\u8f6c\u4e49\u5b57\u7b26\u4e32(\u7528\u6765\u652f\u6301\u8d85\u8fc731\u4f4d\u6574\u6570\u7684\u8f6c\u6362)",
        "prefix": "string.toValue"
    },
    "string.urlEncode": {
        "body": "string.urlEncode(${1:\"123abc\"})",
        "description": "\u5c06\u5b57\u7b26\u4e32\u8fdb\u884curl\u7f16\u7801\u8f6c\u6362",
        "prefix": "string.urlEncode"
    },
    "string.toBase64": {
        "body": "string.toBase64(${1:str})",
        "description": "\u5c06\u5b57\u7b26\u4e32\u8fdb\u884cbase64\u7f16\u7801",
        "prefix": "string.toBase64"
    },
    "string.fromBase64": {
        "body": "string.fromBase64(${1:str})",
        "description": "\u5c06\u5b57\u7b26\u4e32\u8fdb\u884cbase64\u89e3\u7801",
        "prefix": "string.fromBase64"
    },
    "timer.mdelay": {
        "body": "timer.mdelay(${1:timeout})",
        "description": "\u786c\u963b\u585e\u6307\u5b9a\u65f6\u957f,\u671f\u95f4\u6ca1\u6709\u4efb\u4f55luat\u4ee3\u7801\u4f1a\u6267\u884c,\u5305\u62ec\u5e95\u5c42\u6d88\u606f\u5904\u7406\u673a\u5236",
        "prefix": "timer.mdelay"
    },
    "u8g2.begin": {
        "body": "u8g2.begin(${1:conf})",
        "description": "u8g2\u663e\u793a\u5c4f\u521d\u59cb\u5316",
        "prefix": "u8g2.begin"
    },
    "u8g2.close": {
        "body": "u8g2.close()",
        "description": "\u5173\u95ed\u663e\u793a\u5c4f",
        "prefix": "u8g2.close"
    },
    "u8g2.ClearBuffer": {
        "body": "u8g2.ClearBuffer()",
        "description": "\u6e05\u5c4f\uff0c\u6e05\u9664\u5185\u5b58\u5e27\u7f13\u51b2\u533a\u4e2d\u7684\u6240\u6709\u50cf\u7d20",
        "prefix": "u8g2.ClearBuffer"
    },
    "u8g2.SendBuffer": {
        "body": "u8g2.SendBuffer()",
        "description": "\u5c06\u6570\u636e\u66f4\u65b0\u5230\u5c4f\u5e55\uff0c\u5c06\u5b58\u50a8\u5668\u5e27\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u53d1\u9001\u5230\u663e\u793a\u5668",
        "prefix": "u8g2.SendBuffer"
    },
    "u8g2.DrawUTF8": {
        "body": "u8g2.DrawUTF8(${1:str},${2:x},${3:y})",
        "description": "\u5728\u663e\u793a\u5c4f\u4e0a\u753b\u4e00\u6bb5\u6587\u5b57\uff0c\u5728\u663e\u793a\u5c4f\u4e0a\u753b\u4e00\u6bb5\u6587\u5b57,\u8981\u8c03\u7528u8g2.SendBuffer()\u624d\u4f1a\u66f4\u65b0\u5230\u5c4f\u5e55",
        "prefix": "u8g2.DrawUTF8"
    },
    "u8g2.SetFontMode": {
        "body": "u8g2.SetFontMode(${1:mode})",
        "description": "\u8bbe\u7f6e\u5b57\u4f53\u6a21\u5f0f",
        "prefix": "u8g2.SetFontMode"
    },
    "u8g2.SetFont": {
        "body": "u8g2.SetFont(${1:font})",
        "description": "\u8bbe\u7f6e\u5b57\u4f53",
        "prefix": "u8g2.SetFont"
    },
    "u8g2.GetDisplayHeight": {
        "body": "u8g2.GetDisplayHeight()",
        "description": "\u83b7\u53d6\u663e\u793a\u5c4f\u9ad8\u5ea6",
        "prefix": "u8g2.GetDisplayHeight"
    },
    "u8g2.GetDisplayWidth": {
        "body": "u8g2.GetDisplayWidth()",
        "description": "\u83b7\u53d6\u663e\u793a\u5c4f\u5bbd\u5ea6",
        "prefix": "u8g2.GetDisplayWidth"
    },
    "u8g2.DrawPixel": {
        "body": "u8g2.DrawPixel(${1:x},${2:y})",
        "description": "\u753b\u4e00\u4e2a\u70b9.",
        "prefix": "u8g2.DrawPixel"
    },
    "u8g2.DrawLine": {
        "body": "u8g2.DrawLine(${1:x0},${2:y0},${3:x1},${4:y1})",
        "description": "\u5728\u4e24\u70b9\u4e4b\u95f4\u753b\u4e00\u6761\u7ebf.",
        "prefix": "u8g2.DrawLine"
    },
    "u8g2.DrawCircle": {
        "body": "u8g2.DrawCircle(${1:x0},${2:y0},${3:rad},${4:opt})",
        "description": "\u5728x,y\u4f4d\u7f6e\u753b\u4e00\u4e2a\u534a\u5f84\u4e3arad\u7684\u7a7a\u5fc3\u5706.",
        "prefix": "u8g2.DrawCircle"
    },
    "u8g2.DrawDisc": {
        "body": "u8g2.DrawDisc(${1:x0},${2:y0},${3:rad},${4:opt})",
        "description": "\u5728x,y\u4f4d\u7f6e\u753b\u4e00\u4e2a\u534a\u5f84\u4e3arad\u7684\u5b9e\u5fc3\u5706.",
        "prefix": "u8g2.DrawDisc"
    },
    "u8g2.DrawEllipse": {
        "body": "u8g2.DrawEllipse(${1:x0},${2:y0},${3:rx},${4:ry},${5:opt})",
        "description": "\u5728x,y\u4f4d\u7f6e\u753b\u4e00\u4e2a\u534a\u5f84\u4e3arad\u7684\u7a7a\u5fc3\u692d\u5706.",
        "prefix": "u8g2.DrawEllipse"
    },
    "u8g2.DrawFilledEllipse": {
        "body": "u8g2.DrawFilledEllipse(${1:x0},${2:y0},${3:rx},${4:ry},${5:opt})",
        "description": "\u5728x,y\u4f4d\u7f6e\u753b\u4e00\u4e2a\u534a\u5f84\u4e3arad\u7684\u5b9e\u5fc3\u692d\u5706.",
        "prefix": "u8g2.DrawFilledEllipse"
    },
    "u8g2.DrawBox": {
        "body": "u8g2.DrawBox(${1:x},${2:y},${3:w},${4:h})",
        "description": "\u4ecex / y\u4f4d\u7f6e\uff08\u5de6\u4e0a\u8fb9\u7f18\uff09\u5f00\u59cb\u7ed8\u5236\u4e00\u4e2a\u6846\uff08\u586b\u5145\u7684\u6846\uff09.",
        "prefix": "u8g2.DrawBox"
    },
    "u8g2.DrawFrame": {
        "body": "u8g2.DrawFrame(${1:x},${2:y},${3:w},${4:h})",
        "description": "\u4ecex / y\u4f4d\u7f6e\uff08\u5de6\u4e0a\u8fb9\u7f18\uff09\u5f00\u59cb\u7ed8\u5236\u4e00\u4e2a\u6846\uff08\u7a7a\u6846\uff09.",
        "prefix": "u8g2.DrawFrame"
    },
    "u8g2.DrawRBox": {
        "body": "u8g2.DrawRBox(${1:x},${2:y},${3:w},${4:h},${5:r})",
        "description": "\u7ed8\u5236\u4e00\u4e2a\u4ecex / y\u4f4d\u7f6e\uff08\u5de6\u4e0a\u8fb9\u7f18\uff09\u5f00\u59cb\u5177\u6709\u5706\u5f62\u8fb9\u7f18\u7684\u586b\u5145\u6846/\u6846\u67b6.",
        "prefix": "u8g2.DrawRBox"
    },
    "u8g2.DrawRFrame": {
        "body": "u8g2.DrawRFrame(${1:x},${2:y},${3:w},${4:h},${5:r})",
        "description": "\u7ed8\u5236\u4e00\u4e2a\u4ecex / y\u4f4d\u7f6e\uff08\u5de6\u4e0a\u8fb9\u7f18\uff09\u5f00\u59cb\u5177\u6709\u5706\u5f62\u8fb9\u7f18\u7684\u7a7a\u6846/\u6846\u67b6.",
        "prefix": "u8g2.DrawRFrame"
    },
    "u8g2.DrawGlyph": {
        "body": "u8g2.DrawGlyph(${1:x},${2:y},${3:encoding})",
        "description": "\u7ed8\u5236\u4e00\u4e2a\u56fe\u5f62\u5b57\u7b26\u3002\u5b57\u7b26\u653e\u7f6e\u5728\u6307\u5b9a\u7684\u50cf\u7d20\u4f4d\u7f6ex\u548cy.",
        "prefix": "u8g2.DrawGlyph"
    },
    "u8g2.DrawTriangle": {
        "body": "u8g2.DrawTriangle(${1:x0},${2:y0},${3:x1},${4:y1},${5:x2},${6:y2})",
        "description": "\u7ed8\u5236\u4e00\u4e2a\u4e09\u89d2\u5f62\uff08\u5b9e\u5fc3\u591a\u8fb9\u5f62\uff09.",
        "prefix": "u8g2.DrawTriangle"
    },
    "u8g2.SetBitmapMode": {
        "body": "u8g2.SetBitmapMode(${1:mode})",
        "description": "\u5b9a\u4e49\u4f4d\u56fe\u51fd\u6570\u662f\u5426\u5c06\u5199\u5165\u80cc\u666f\u8272",
        "prefix": "u8g2.SetBitmapMode"
    },
    "u8g2.DrawBitmap": {
        "body": "u8g2.DrawBitmap(${1:x},${2:y},${3:h},${4:data})",
        "description": "\u7ed8\u5236\u4f4d\u56fe",
        "prefix": "u8g2.DrawBitmap"
    },
    "u8g2.drawGtfontGb2312": {
        "body": "u8g2.drawGtfontGb2312(${1:str},${2:size},${3:x},${4:y})",
        "description": "\u4f7f\u7528gtfont\u663e\u793agb2312\u5b57\u7b26\u4e32",
        "prefix": "u8g2.drawGtfontGb2312"
    },
    "u8g2.drawGtfontUtf8": {
        "body": "u8g2.drawGtfontUtf8(${1:str},${2:size},${3:x},${4:y})",
        "description": "\u4f7f\u7528gtfont\u663e\u793aUTF8\u5b57\u7b26\u4e32",
        "prefix": "u8g2.drawGtfontUtf8"
    },
    "uart.setup": {
        "body": "uart.setup(${1:id},${2:baud_rate},${3:data_bits},${4:stop_bits},${5:partiy},${6:bit_order},${7:buff_size})",
        "description": "\u914d\u7f6e\u4e32\u53e3\u53c2\u6570",
        "prefix": "uart.setup"
    },
    "uart.write": {
        "body": "uart.write(${1:id},${2:data})",
        "description": "\u5199\u4e32\u53e3",
        "prefix": "uart.write"
    },
    "uart.read": {
        "body": "uart.read(${1:id},${2:len})",
        "description": "\u8bfb\u4e32\u53e3",
        "prefix": "uart.read"
    },
    "uart.close": {
        "body": "uart.close(${1:id})",
        "description": "\u5173\u95ed\u4e32\u53e3",
        "prefix": "uart.close"
    },
    "uart.on": {
        "body": "uart.on(${1:id},${2:event},${3:func})",
        "description": "\u6ce8\u518c\u4e32\u53e3\u4e8b\u4ef6\u56de\u8c03",
        "prefix": "uart.on"
    },
    "wdt.init": {
        "body": "wdt.init(${1:timeout})",
        "description": "\u521d\u59cb\u5316watchdog\u5e76\u9a6c\u4e0a\u542f\u7528.\u5927\u90e8\u5206\u8bbe\u5907\u7684watchdog\u4e00\u65e6\u542f\u7528\u5c31\u65e0\u6cd5\u5173\u95ed.",
        "prefix": "wdt.init"
    },
    "wdt.setTimeout": {
        "body": "wdt.setTimeout(${1:timeout})",
        "description": "\u90e8\u5206\u8bbe\u5907\u652f\u6301\u91cd\u65b0\u8bbe\u7f6ewatchdog\u8d85\u65f6\u65f6\u957f",
        "prefix": "wdt.setTimeout"
    },
    "wdt.feed": {
        "body": "wdt.feed()",
        "description": "\u5582\u72d7,\u4f7f\u5f97\u8d85\u65f6\u8ba1\u65f6\u590d\u4f4d,\u91cd\u65b0\u8ba1\u65f6",
        "prefix": "wdt.feed"
    },
    "wdt.close": {
        "body": "wdt.close()",
        "description": "\u5173\u95edwatchdog,\u901a\u5e38\u4e0d\u88ab\u652f\u6301",
        "prefix": "wdt.close"
    },
    "wlan.getMode": {
        "body": "wlan.getMode(${1:dev})",
        "description": "\u83b7\u53d6wifi\u6a21\u5f0f",
        "prefix": "wlan.getMode"
    },
    "wlan.setMode": {
        "body": "wlan.setMode(${1:dev},${2:mode})",
        "description": "\u8bbe\u7f6ewifi\u6a21\u5f0f,\u901a\u5e38\u4e0d\u9700\u8981\u8bbe\u7f6e",
        "prefix": "wlan.setMode"
    },
    "wlan.connect": {
        "body": "wlan.connect(${1:ssid},${2:password})",
        "description": "\u8fde\u63a5wifi,\u6210\u529f\u542f\u52a8\u8054\u7f51\u7ebf\u7a0b\u4e0d\u7b49\u4e8e\u8054\u7f51\u6210\u529f!!",
        "prefix": "wlan.connect"
    },
    "wlan.disconnect": {
        "body": "wlan.disconnect()",
        "description": "\u65ad\u5f00wifi",
        "prefix": "wlan.disconnect"
    },
    "wlan.connected": {
        "body": "wlan.connected()",
        "description": "\u662f\u5426\u5df2\u7ecf\u8fde\u4e0awifi\u7f51\u7edc",
        "prefix": "wlan.connected"
    },
    "wlan.autoreconnect": {
        "body": "wlan.autoreconnect(${1:enable})",
        "description": "\u8bbe\u7f6e\u6216\u67e5\u8be2wifi station\u662f\u5426\u81ea\u52a8\u8fde\u63a5",
        "prefix": "wlan.autoreconnect"
    },
    "wlan.scan": {
        "body": "wlan.scan()",
        "description": "\u5f00\u59cb\u626b\u7f51,\u901a\u5e38\u914d\u5408wlan.scanResult\u4f7f\u7528",
        "prefix": "wlan.scan"
    },
    "wlan.scanResult": {
        "body": "wlan.scanResult(${1:num})",
        "description": "\u83b7\u53d6\u626b\u7f51\u7ed3\u679c,\u9700\u8981\u5148\u6267\u884cwlan.scan,\u5e76\u7b49\u5f85WLAN_SCAN_DONE\u4e8b\u4ef6",
        "prefix": "wlan.scanResult"
    },
    "wlan.get_mac_raw": {
        "body": "wlan.get_mac_raw()",
        "description": "\u83b7\u53d6mac\u5730\u5740,raw\u683c\u5f0f",
        "prefix": "wlan.get_mac_raw"
    },
    "wlan.ready": {
        "body": "wlan.ready()",
        "description": "wifi\u662f\u5426\u5df2\u7ecf\u83b7\u53d6ip",
        "prefix": "wlan.ready"
    },
    "wlan.oneShotStart": {
        "body": "wlan.oneShotStart(${1:mode},${2:ssid},${3:passwd})",
        "description": "\u542f\u52a8\u914d\u7f51\u8fc7\u7a0b,\u652f\u6301UDP/SOCKET/APWEB\u914d\u7f51",
        "prefix": "wlan.oneShotStart"
    },
    "wlan.oneshotStop": {
        "body": "wlan.oneshotStop()",
        "description": "\u505c\u6b62\u914d\u7f51, \u901a\u5e38\u4e0d\u9700\u8981\u8c03\u7528",
        "prefix": "wlan.oneshotStop"
    },
    "wlan.oneshotState": {
        "body": "wlan.oneshotState()",
        "description": "\u67e5\u8be2\u914d\u7f51\u72b6\u6001",
        "prefix": "wlan.oneshotState"
    },
    "zbuff.create": {
        "body": "zbuff.create(${1:{width},${2:height},${3:bit}},${4:data})",
        "description": "\u521b\u5efaframebuff\u7528\u7684zbuff",
        "prefix": "zbuff.create"
    },
    "buff:write": {
        "body": "buff:write(${1:para},${2:...})",
        "description": "zbuff\u5199\u6570\u636e",
        "prefix": "buff:write"
    },
    "buff:read": {
        "body": "buff:read(${1:length})",
        "description": "zbuff\u8bfb\u6570\u636e",
        "prefix": "buff:read"
    },
    "buff:clear": {
        "body": "buff:clear(${1:num})",
        "description": "zbuff\u6e05\u7a7a\u6570\u636e",
        "prefix": "buff:clear"
    },
    "buff:seek": {
        "body": "buff:seek(${1:base},${2:offset})",
        "description": "zbuff\u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e",
        "prefix": "buff:seek"
    },
    "buff:pack": {
        "body": "buff:pack(${1:format},${2:val1},${3:val2},${4:...})",
        "description": "\u5c06\u4e00\u7cfb\u5217\u6570\u636e\u6309\u7167\u683c\u5f0f\u5b57\u7b26\u8f6c\u5316\uff0c\u5e76\u5199\u5165",
        "prefix": "buff:pack"
    },
    "buff:unpack": {
        "body": "buff:unpack(${1:format})",
        "description": "\u5c06\u4e00\u7cfb\u5217\u6570\u636e\u6309\u7167\u683c\u5f0f\u5b57\u7b26\u8bfb\u53d6\u51fa\u6765",
        "prefix": "buff:unpack"
    },
    "buff:read\u7c7b\u578b": {
        "body": "buff:read\u7c7b\u578b()",
        "description": "\u8bfb\u53d6\u4e00\u4e2a\u6307\u5b9a\u7c7b\u578b\u7684\u6570\u636e",
        "prefix": "buff:read\u7c7b\u578b"
    },
    "buff:write\u7c7b\u578b": {
        "body": "buff:write\u7c7b\u578b()",
        "description": "\u5199\u5165\u4e00\u4e2a\u6307\u5b9a\u7c7b\u578b\u7684\u6570\u636e",
        "prefix": "buff:write\u7c7b\u578b"
    },
    "buff:toStr": {
        "body": "buff:toStr(${1:offset},${2:length})",
        "description": "\u6309\u8d77\u59cb\u4f4d\u7f6e\u548c\u957f\u5ea6\u53d6\u51fa\u6570\u636e",
        "prefix": "buff:toStr"
    },
    "buff:len": {
        "body": "buff:len()",
        "description": "\u83b7\u53d6zbuff\u5bf9\u8c61\u7684\u957f\u5ea6",
        "prefix": "buff:len"
    },
    "buff:setFrameBuffer": {
        "body": "buff:setFrameBuffer(${1:width},${2:height},${3:bit},${4:color})",
        "description": "\u8bbe\u7f6ebuff\u5bf9\u8c61\u7684FrameBuffer\u5c5e\u6027",
        "prefix": "buff:setFrameBuffer"
    },
    "buff:pixel": {
        "body": "buff:pixel(${1:x},${2:y},${3:color})",
        "description": "\u8bbe\u7f6e\u6216\u83b7\u53d6FrameBuffer\u67d0\u4e2a\u50cf\u7d20\u70b9\u7684\u989c\u8272",
        "prefix": "buff:pixel"
    },
    "buff:drawLine": {
        "body": "buff:drawLine(${1:x1},${2:y1},${3:x2},${4:y2},${5:color})",
        "description": "\u753b\u4e00\u6761\u7ebf",
        "prefix": "buff:drawLine"
    },
    "buff:drawRect": {
        "body": "buff:drawRect(${1:x1},${2:y1},${3:x2},${4:y2},${5:color},${6:fill})",
        "description": "\u753b\u4e00\u4e2a\u77e9\u5f62",
        "prefix": "buff:drawRect"
    },
    "buff:drawCircle": {
        "body": "buff:drawCircle(${1:x},${2:y},${3:r},${4:color},${5:fill})",
        "description": "\u753b\u4e00\u4e2a\u5706\u5f62",
        "prefix": "buff:drawCircle"
    },
    "buff[n": {
        "body": "buff[n]",
        "description": "\u4ee5\u4e0b\u6807\u5f62\u5f0f\u8fdb\u884c\u6570\u636e\u8bfb\u5199",
        "prefix": "buff[n"
    }
}